# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-01-30 04:06
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('category', '0002_auto_20180118_1155'),
        ('product', '0046_auto_20180129_1703'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ampoule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('puissance', models.CharField(choices=[('4KW', '4KW'), ('335KW', '335KW'), ('55KW', '55KW'), ('5,5KW', '5,5KW'), ('75KW', '75KW'), ('90KW', '90KW'), ('7,5KW', '7,5KW'), ('110KW', '110KW'), ('11KW', '11KW'), ('2000W', '2000W'), ('1000W', '1000W'), ('800W', '800W'), ('600W', '600W'), ('300W', '300W'), ('5000W', '5000W'), ('4000W', '4000W'), ('3000W', '3000W'), ('3W', '3W'), ('6W', '6W'), ('12W', '12W'), ('48W', '48W'), ('40W', '40W'), ('20W', '20W'), ('16W', '16W'), ('8W', '8W')], max_length=20, verbose_name='PUISSANCE')),
                ('type', models.CharField(choices=[('ECONOMIQUE', 'ECONOMIQUE'), ('HALOGENE', 'HALOGENE'), ('INCANDESCENCE', 'INCANDESCENCE'), ('INFRAROUGE', 'INFRAROUGE'), ('LED', 'LED'), ('PROJECTEUR', 'PROJECTEUR')], max_length=20, verbose_name='TYPE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='AppareilMesure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_appareil_mesure', models.CharField(choices=[('PINCE AMPEREMETRIQUE', 'PINCE AMPEREMETRIQUE'), ('DIGITAL', 'DIGITAL'), ('MECANIQUE', 'MECANIQUE')], max_length=20, verbose_name='TYPE APPAREIL')),
                ('tension', models.CharField(choices=[('110V', '110V'), ('230V', '230V'), ('24V', '24V'), ('24VCC', '24VCC'), ('380V', '380V'), ('400V', '400V'), ('48V', '48V'), ('220V', '220V'), ('250V', '250V'), ('500V', '500V'), ('1000V', '1000V')], max_length=20, verbose_name='TENSION')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Betonniere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('capacite', models.CharField(choices=[('180L', '180L'), ('260L', '260L'), ('350L', '350L'), ('360L ', '360L '), ('500L ', '500L ')], max_length=20, verbose_name='CAPACITE')),
                ('type', models.CharField(choices=[('ELECTRIQUE', 'ELECTRIQUE'), ('DIESEL', 'DIESEL')], max_length=20, verbose_name='BETONNIERE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='CableMasse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('section', models.CharField(choices=[('4', '4'), ('6', '6'), ('10', '10'), ('16', '16'), ('25', '25'), ('35', '35'), ('50mm2', '50mm2'), ('3X2,5mm2', '3X2,5mm2'), ('3X1,5mm2', '3X1,5mm2')], max_length=20, verbose_name='SECTION')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='CableSouple',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_cable', models.CharField(choices=[('ARME', 'ARME'), ('AERIEN', 'AERIEN')], max_length=20, verbose_name='TYPE DE CABLE')),
                ('nombre_fil', models.CharField(choices=[('4', '4'), ('3', '3')], max_length=20, verbose_name='NOMBRE DE FIL')),
                ('section', models.CharField(choices=[('4', '4'), ('6', '6'), ('10', '10'), ('16', '16'), ('25', '25'), ('35', '35'), ('50mm2', '50mm2'), ('3X2,5mm2', '3X2,5mm2'), ('3X1,5mm2', '3X1,5mm2')], max_length=20, verbose_name='SECTION')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Citerne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('capacite', models.CharField(choices=[('100L', '100L'), ('150L', '150L'), ('200L', '200L'), ('300L', '300L'), ('500L', '500L'), ('1000L', '1000L'), ('2000L', '2000L'), ('3000L', '3000L'), ('5000L', '5000L'), ('10000L', '10000L')], max_length=20, verbose_name='CAPACITE')),
                ('materiau', models.CharField(choices=[('INOX', 'INOX'), ('PLASTIQUE', 'PLASTIQUE')], max_length=20, verbose_name='MATERIAU')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='CoffretDivisionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('nombre_circuit', models.CharField(choices=[('8', '8'), ('12', '12'), ('16', '16'), ('24', '24'), ('36', '36')], max_length=20, verbose_name='NOMBRE CIRCUIT')),
                ('marque', models.CharField(choices=[('SCHNEIDER', 'SCHNEIDER'), ('APC', 'APC'), ('MACKEL', 'MACKEL'), ('VINCKIER', 'VINCKIER'), ('ABB', 'ABB'), ('WESTECH', 'WESTECH'), ('VICTRON', 'VICTRON'), ('MERCURY', 'MERCURY'), ('VICKO', 'VICKO'), ('LE GRAND', 'LE GRAND'), ('NIKO', 'NIKO'), ('INGELEC', 'INGELEC')], max_length=20, verbose_name='MARQUE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='CoffretElectriqueModulaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('SCHNEIDER', 'SCHNEIDER'), ('APC', 'APC'), ('MACKEL', 'MACKEL'), ('VINCKIER', 'VINCKIER'), ('ABB', 'ABB'), ('WESTECH', 'WESTECH'), ('VICTRON', 'VICTRON'), ('MERCURY', 'MERCURY'), ('VICKO', 'VICKO'), ('LE GRAND', 'LE GRAND'), ('NIKO', 'NIKO'), ('INGELEC', 'INGELEC')], max_length=20, verbose_name='MARQUE ')),
                ('nombre_module', models.CharField(choices=[('4', '4'), ('6', '6'), ('8', '8'), ('12', '12')], max_length=20, verbose_name='NOMBRE DE MODULE')),
                ('encastre_saili', models.CharField(choices=[('SAILLI', 'SAILLI'), ('ENCASTRE', 'ENCASTRE')], max_length=20, verbose_name='ENCASTRÉ OU SAILI')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='CoffretJeuBarre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('intensite', models.CharField(choices=[('25A', '25A'), ('40A', '40A'), ('63A', '63A'), ('9A', '9A'), ('1000A', '1000A'), ('115A', '115A'), ('12A', '12A'), ('150A', '150A'), ('185A', '18A'), ('225A', '225A'), ('100A', '100A'), ('125A', '125A'), ('160A', '160A'), ('200A', '200A'), ('80A', '80A'), ('250A', '250A'), ('40A', '40A'), ('400A', '400A'), ('64A', '64A'), ('18A', '18A')], max_length=20, verbose_name='INTENSITE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Compacteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('puissance', models.CharField(choices=[('5.5 HP', '5.5 HP'), ('6.5 HP', '6.5 HP'), ('4.0 HP', '4.0 HP'), ('2HP', '2HP'), ('3HP', '3HP'), ('4HP', '4HP'), ('10HP', '10HP'), ('7.5HP', '7.5HP'), ('0.5 HP', '0.5HP'), ('0.75HP', '0.75HP'), ('1HP', '1HP'), ('1.5HP', '1.5HP'), ('15HP', '15HP'), ('20HP', '20HP'), ('25HP', '25HP'), ('30HP', '30HP'), ('40HP', '40HP')], max_length=20, verbose_name='PUISSANCE ')),
                ('type_Compacteur', models.CharField(choices=[('PLATE', 'PLATE'), ('PLATE 50CM', 'PLATE 50CM'), ('PLATE 60CM', 'PLATE 60CM'), ('ROUE', 'ROUE'), ('BARE', 'BARE')], max_length=20, verbose_name='TYPE')),
                ('type_carburant', models.CharField(choices=[('ESSENCE', 'ESSENCE'), ('DIESEL', 'DIESEL')], max_length=20, verbose_name='TYPE CARBURANT')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='CompresseurAir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('puissance', models.CharField(choices=[('5.5 HP', '5.5 HP'), ('6.5 HP', '6.5 HP'), ('4.0 HP', '4.0 HP'), ('2HP', '2HP'), ('3HP', '3HP'), ('4HP', '4HP'), ('10HP', '10HP'), ('7.5HP', '7.5HP'), ('0.5 HP', '0.5HP'), ('0.75HP', '0.75HP'), ('1HP', '1HP'), ('1.5HP', '1.5HP'), ('15HP', '15HP'), ('20HP', '20HP'), ('25HP', '25HP'), ('30HP', '30HP'), ('40HP', '40HP')], max_length=20, verbose_name='PUISSANCE ')),
                ('capacite', models.CharField(choices=[('100L', '100L'), ('150L', '150L'), ('200L', '200L'), ('300L', '300L'), ('500L', '500L'), ('1000L', '1000L'), ('2000L', '2000L'), ('3000L', '3000L'), ('5000L', '5000L'), ('10000L', '10000L')], max_length=20, verbose_name='CAPACITE')),
                ('debit', models.CharField(choices=[('250L/MIN', '250L/MIN'), ('360L/MIN', '360L/MIN'), ('1000L/MIN', '1000L/MIN'), ('900L/MIN', '900L/MIN'), ('1050L/MIN', '1050L/MIN'), ('2800L/MIN', '2800L/MIN'), ('3600L/MIN', '3600L/MIN'), ('3000L/MIN', '3000L/MIN'), ('1300L/MIN', '1300L/MIN'), ('465L/MIN', '465L/MIN'), ('280L/MIN', '280L/MIN')], max_length=20, verbose_name='DEBIT ')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='DetecteurIncendie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('mode_detection', models.CharField(choices=[('DETECTION DE CHALEUR', 'DETECTION DE CHALEUR'), ('DETECTEUR OPTIQUE ', 'DETECTEUR OPTIQUE '), ('DETECTION DE FUMEE', 'DETECTION DE FUMEE'), ('ETECTION DE CHALEUR', 'ETECTION DE CHALEUR'), ('DETECTION DE FUMEE', 'DETECTION DE FUMEE')], max_length=20, verbose_name='MODE DE DETECTION')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='DisjoncteurCompact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('SCHNEIDER', 'SCHNEIDER'), ('APC', 'APC'), ('MACKEL', 'MACKEL'), ('VINCKIER', 'VINCKIER'), ('ABB', 'ABB'), ('WESTECH', 'WESTECH'), ('VICTRON', 'VICTRON'), ('MERCURY', 'MERCURY'), ('VICKO', 'VICKO'), ('LE GRAND', 'LE GRAND'), ('NIKO', 'NIKO'), ('INGELEC', 'INGELEC')], max_length=20, verbose_name='MARQUE')),
                ('intensite', models.CharField(choices=[('25A', '25A'), ('40A', '40A'), ('63A', '63A'), ('9A', '9A'), ('1000A', '1000A'), ('115A', '115A'), ('12A', '12A'), ('150A', '150A'), ('185A', '18A'), ('225A', '225A'), ('100A', '100A'), ('125A', '125A'), ('160A', '160A'), ('200A', '200A'), ('80A', '80A'), ('250A', '250A'), ('40A', '40A'), ('400A', '400A'), ('64A', '64A'), ('18A', '18A')], max_length=20, verbose_name='INTENSITE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='DisjoncteurContacteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('SCHNEIDER', 'SCHNEIDER'), ('APC', 'APC'), ('MACKEL', 'MACKEL'), ('VINCKIER', 'VINCKIER'), ('ABB', 'ABB'), ('WESTECH', 'WESTECH'), ('VICTRON', 'VICTRON'), ('MERCURY', 'MERCURY'), ('VICKO', 'VICKO'), ('LE GRAND', 'LE GRAND'), ('NIKO', 'NIKO'), ('INGELEC', 'INGELEC')], max_length=20, verbose_name='MARQUE')),
                ('intensite', models.CharField(choices=[('25A', '25A'), ('40A', '40A'), ('63A', '63A'), ('9A', '9A'), ('1000A', '1000A'), ('115A', '115A'), ('12A', '12A'), ('150A', '150A'), ('185A', '18A'), ('225A', '225A'), ('100A', '100A'), ('125A', '125A'), ('160A', '160A'), ('200A', '200A'), ('80A', '80A'), ('250A', '250A'), ('40A', '40A'), ('400A', '400A'), ('64A', '64A'), ('18A', '18A')], max_length=20, verbose_name='INTENSITE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='DisjoncteurDifferentiel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('SCHNEIDER', 'SCHNEIDER'), ('APC', 'APC'), ('MACKEL', 'MACKEL'), ('VINCKIER', 'VINCKIER'), ('ABB', 'ABB'), ('WESTECH', 'WESTECH'), ('VICTRON', 'VICTRON'), ('MERCURY', 'MERCURY'), ('VICKO', 'VICKO'), ('LE GRAND', 'LE GRAND'), ('NIKO', 'NIKO'), ('INGELEC', 'INGELEC')], max_length=20, verbose_name='MARQUE ')),
                ('nombre_pole', models.CharField(choices=[('2', '2'), ('3', '3'), ('4', '4')], max_length=20, verbose_name='NOMBRE DE POLE')),
                ('intensite', models.CharField(choices=[('25A', '25A'), ('40A', '40A'), ('63A', '63A'), ('9A', '9A'), ('1000A', '1000A'), ('115A', '115A'), ('12A', '12A'), ('150A', '150A'), ('185A', '18A'), ('225A', '225A'), ('100A', '100A'), ('125A', '125A'), ('160A', '160A'), ('200A', '200A'), ('80A', '80A'), ('250A', '250A'), ('40A', '40A'), ('400A', '400A'), ('64A', '64A'), ('18A', '18A')], max_length=20, verbose_name='INTENSITÉ')),
                ('sensibilite', models.CharField(choices=[('300MA', '300MA')], max_length=20, verbose_name='SENSIBILITÉ')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Extincteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('agent', models.CharField(choices=[('DETECTION DE CHALEUR', 'DETECTION DE CHALEUR'), ('DETECTEUR OPTIQUE ', 'DETECTEUR OPTIQUE '), ('DETECTION DE FUMEE', 'DETECTION DE FUMEE'), ('ETECTION DE CHALEUR', 'ETECTION DE CHALEUR'), ('DETECTION DE FUMEE', 'DETECTION DE FUMEE')], max_length=20, verbose_name='MODE DE DETECTION')),
                ('poids', models.CharField(choices=[('5KG', '5KG'), ('6KG', '6KG'), ('9KG', '9KG')], max_length=20, verbose_name='POIDS')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='FilPlastique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('nombre_fil', models.CharField(choices=[('4', '4'), ('3', '3')], max_length=20, verbose_name='NOMBRE DE FIL')),
                ('section', models.CharField(choices=[('4', '4'), ('6', '6'), ('10', '10'), ('16', '16'), ('25', '25'), ('35', '35'), ('50mm2', '50mm2'), ('3X2,5mm2', '3X2,5mm2'), ('3X1,5mm2', '3X1,5mm2')], max_length=20, verbose_name='SECTION')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Interrupteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('SCHNEIDER', 'SCHNEIDER'), ('APC', 'APC'), ('MACKEL', 'MACKEL'), ('VINCKIER', 'VINCKIER'), ('ABB', 'ABB'), ('WESTECH', 'WESTECH'), ('VICTRON', 'VICTRON'), ('MERCURY', 'MERCURY'), ('VICKO', 'VICKO'), ('LE GRAND', 'LE GRAND'), ('NIKO', 'NIKO'), ('INGELEC', 'INGELEC')], max_length=20, verbose_name='MARQUE')),
                ('schema', models.CharField(choices=[('SCHEMA1', 'SCHEMA1'), ('SCHEMA2', 'SCHEMA2'), ('SCHEMA3', 'SCHEMA3'), ('SCHEMA5', 'SCHEMA5'), ('SCHEMA6', 'SCHEMA6'), ('SCHEMA7', 'SCHEMA7')], max_length=20, verbose_name='SCHEMA')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='InverseurCoffret',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('SCHNEIDER', 'SCHNEIDER'), ('APC', 'APC'), ('MACKEL', 'MACKEL'), ('VINCKIER', 'VINCKIER'), ('ABB', 'ABB'), ('WESTECH', 'WESTECH'), ('VICTRON', 'VICTRON'), ('MERCURY', 'MERCURY'), ('VICKO', 'VICKO'), ('LE GRAND', 'LE GRAND'), ('NIKO', 'NIKO'), ('INGELEC', 'INGELEC')], max_length=20, verbose_name='MARQUE')),
                ('intensite', models.CharField(choices=[('25A', '25A'), ('40A', '40A'), ('63A', '63A'), ('9A', '9A'), ('1000A', '1000A'), ('115A', '115A'), ('12A', '12A'), ('150A', '150A'), ('185A', '18A'), ('225A', '225A'), ('100A', '100A'), ('125A', '125A'), ('160A', '160A'), ('200A', '200A'), ('80A', '80A'), ('250A', '250A'), ('40A', '40A'), ('400A', '400A'), ('64A', '64A'), ('18A', '18A')], max_length=20, verbose_name='INTENSITE')),
                ('nombre_circuit', models.CharField(choices=[('8', '8'), ('12', '12'), ('16', '16'), ('24', '24'), ('36', '36')], max_length=20, verbose_name='NOMBRE CIRCUIT')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='OutilsManuel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_outils', models.CharField(choices=[('PLANTOIR', 'PLANTOIR'), ('PINCEAU', 'PINCEAU'), ('RATEAU', 'RATEAU'), ('PELLE', 'PELLE'), ('MACHETTE', 'MACHETTE'), ('ARROSOIR', 'ARROSOIR'), ('HACHE', 'HACHE')], max_length=20, verbose_name='OUTILLAGE MANUEL')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='PanneauSignalisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_signalisation', models.CharField(choices=[('PANNEAU EXTINCTEUR EN PVC', 'PANNEAU EXTINCTEUR EN PVC'), ('PANNEAU EXTINCTEUR LUMINESCENT ', 'PANNEAU EXTINCTEUR LUMINESCENT '), ('PANNEAU INDICATION SYMBOLE RIA EN PVC ', 'PANNEAU INDICATION SYMBOLE RIA EN PVC '), ('PANNEAU EVACUATION LUMINISCENT DIR. GAUCHE', 'PANNEAU EVACUATION LUMINISCENT DIR. GAUCHE'), ('PANNEAU EVACUATION LUMINESCENT DIR. DROITE', 'PANNEAU EVACUATION LUMINESCENT DIR. DROITE'), ('PANNEAU EVACUATION LUMINESCENT SORTIE DE SECOURS', 'PANNEAU EVACUATION LUMINESCENT SORTIE DE SECOURS'), ('PANNEAU EVACUATION LUMINESCENT ', 'PANNEAU EVACUATION LUMINESCENT '), ('PANNEAU EVACUATION EN PVC', 'PANNEAU EVACUATION EN PVC'), ('PANNEAU  DEVACUATION EN PVC DIRECTION A SUIVRE ', 'PANNEAU  EVACUATION EN PVC DIRECTION A SUIVRE '), ('PANNEAU POINT DE RASSEMBLEMENT ', 'PANNEAU POINT DE RASSEMBLEMENT ')], max_length=20, verbose_name='TYPE SIGNALISATION')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='PlafonnierLed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('puissance', models.CharField(choices=[('4KW', '4KW'), ('335KW', '335KW'), ('55KW', '55KW'), ('5,5KW', '5,5KW'), ('75KW', '75KW'), ('90KW', '90KW'), ('7,5KW', '7,5KW'), ('110KW', '110KW'), ('11KW', '11KW'), ('2000W', '2000W'), ('1000W', '1000W'), ('800W', '800W'), ('600W', '600W'), ('300W', '300W'), ('5000W', '5000W'), ('4000W', '4000W'), ('3000W', '3000W'), ('3W', '3W'), ('6W', '6W'), ('12W', '12W'), ('48W', '48W'), ('40W', '40W'), ('20W', '20W'), ('16W', '16W'), ('8W', '8W')], max_length=20, verbose_name='PUISSANCE')),
                ('tension', models.CharField(choices=[('110V', '110V'), ('230V', '230V'), ('24V', '24V'), ('24VCC', '24VCC'), ('380V', '380V'), ('400V', '400V'), ('48V', '48V'), ('220V', '220V'), ('250V', '250V'), ('500V', '500V'), ('1000V', '1000V')], max_length=20, verbose_name='TENSION')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='PompeImmergee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('puissance_pompe', models.CharField(choices=[('5.5 HP', '5.5 HP'), ('6.5 HP', '6.5 HP'), ('4.0 HP', '4.0 HP'), ('2HP', '2HP'), ('3HP', '3HP'), ('4HP', '4HP'), ('10HP', '10HP'), ('7.5HP', '7.5HP'), ('0.5 HP', '0.5HP'), ('0.75HP', '0.75HP'), ('1HP', '1HP'), ('1.5HP', '1.5HP'), ('15HP', '15HP'), ('20HP', '20HP'), ('25HP', '25HP'), ('30HP', '30HP'), ('40HP', '40HP')], max_length=20, verbose_name='PUISSANCE')),
                ('debit', models.CharField(choices=[('300 L/H', '300 L/H'), ('600 L/H', '600 L/H'), ('1200 L/H', '1200 L/H'), ('1500 L/H', '1500 L/H'), ('1800 L/H', '1800 L/H'), ('3000 L/H', '3000 L/H'), ('3800 L/H', '3800 L/H'), ('4020 L/H', '4020 L/H'), ('4600 L/H', '4600 L/H'), ('6800 L/H', '6800 L/H'), ('10020 L/H', '10020 L/H'), ('15000 L/H', '15000 L/H'), ('15700 L/H', '15700 L/H'), ('17500 L/H', '17500 L/H'), ('18000 L/H', '18000 L/H'), ('23000 L/H', '23000 L/H')], max_length=20, verbose_name='DEBIT')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Projecteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('puissance', models.CharField(choices=[('4KW', '4KW'), ('335KW', '335KW'), ('55KW', '55KW'), ('5,5KW', '5,5KW'), ('75KW', '75KW'), ('90KW', '90KW'), ('7,5KW', '7,5KW'), ('110KW', '110KW'), ('11KW', '11KW'), ('2000W', '2000W'), ('1000W', '1000W'), ('800W', '800W'), ('600W', '600W'), ('300W', '300W'), ('5000W', '5000W'), ('4000W', '4000W'), ('3000W', '3000W'), ('3W', '3W'), ('6W', '6W'), ('12W', '12W'), ('48W', '48W'), ('40W', '40W'), ('20W', '20W'), ('16W', '16W'), ('8W', '8W')], max_length=20, verbose_name='PUISSANCE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='reglette',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('puissance', models.CharField(choices=[('4KW', '4KW'), ('335KW', '335KW'), ('55KW', '55KW'), ('5,5KW', '5,5KW'), ('75KW', '75KW'), ('90KW', '90KW'), ('7,5KW', '7,5KW'), ('110KW', '110KW'), ('11KW', '11KW'), ('2000W', '2000W'), ('1000W', '1000W'), ('800W', '800W'), ('600W', '600W'), ('300W', '300W'), ('5000W', '5000W'), ('4000W', '4000W'), ('3000W', '3000W'), ('3W', '3W'), ('6W', '6W'), ('12W', '12W'), ('48W', '48W'), ('40W', '40W'), ('20W', '20W'), ('16W', '16W'), ('8W', '8W')], max_length=20, verbose_name='PUISSANCE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='RouleauFlexuble',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('dimension', models.CharField(choices=[('5/8', '5/8'), ('3/4', '3/4')], max_length=20, verbose_name='DIMENSION')),
                ('longueur', models.CharField(choices=[('100m', '100m'), ('50m', '50m')], max_length=20, verbose_name='LONGUEUR')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Tondeuse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('puissance_tondeuse', models.CharField(choices=[('12800W', '12800W')], max_length=20, verbose_name='PUISSANCE ')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Tronconneuse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('model', models.CharField(choices=[('090', '090'), ('070', '070'), ('AV 070', 'AV 070')], max_length=20, verbose_name='MODEL ')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Tube',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('puissance', models.CharField(choices=[('4KW', '4KW'), ('335KW', '335KW'), ('55KW', '55KW'), ('5,5KW', '5,5KW'), ('75KW', '75KW'), ('90KW', '90KW'), ('7,5KW', '7,5KW'), ('110KW', '110KW'), ('11KW', '11KW'), ('2000W', '2000W'), ('1000W', '1000W'), ('800W', '800W'), ('600W', '600W'), ('300W', '300W'), ('5000W', '5000W'), ('4000W', '4000W'), ('3000W', '3000W'), ('3W', '3W'), ('6W', '6W'), ('12W', '12W'), ('48W', '48W'), ('40W', '40W'), ('20W', '20W'), ('16W', '16W'), ('8W', '8W')], max_length=20, verbose_name='PUISSANCE')),
                ('type_tube', models.CharField(choices=[('FLUORESCENT', 'FLUORESCENT'), ('LED', 'LED')], max_length=20, verbose_name='TYPE TUBE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.RemoveField(
            model_name='outilsjardinage',
            name='category',
        ),
        migrations.RemoveField(
            model_name='outilsjardinage',
            name='vendeur',
        ),
        migrations.AlterModelOptions(
            name='accessoireshydrophore',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='ampouleelectrique',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='appareildemesure',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='balance',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='boitecuisiniere',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='boitederivation',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='chargeurbatterie',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='clefmolette',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='coffretelectrique',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='compresseur',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='contacteur',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='controleaccesetpointage',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='convertisseur',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='cylindre',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='detecteurintrusion',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='disjoncteur',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='disjoncteurmoteur',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='enregistreurcamerasurveillance',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='enseignelumineuse',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='equerre',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='flexible',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='fusible',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='gant',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='groupeelectrogene',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='interrupteurdifferentiel',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='interrupteurelectrique',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='inverseur',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='machineateliernonportatif',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='machineatelierportatif',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='mechebeton',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='montecharge',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='moteurelectrique',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='motopompe',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='palanmecanique',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='paumelle',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='pompeeau',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='pompeforage',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='pompehydrophore',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='priseelectrique',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='rallonge',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='reductionpvc',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='sechemain',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='siphon',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='tuyauterie',
            options={'ordering': ['prix']},
        ),
        migrations.RemoveField(
            model_name='chargeurbatterie',
            name='marque_chargeur',
        ),
        migrations.RemoveField(
            model_name='groupeelectrogene',
            name='marque_marchine',
        ),
        migrations.RemoveField(
            model_name='groupeelectrogene',
            name='moteur',
        ),
        migrations.RemoveField(
            model_name='machineatelierportatif',
            name='tension',
        ),
        migrations.RemoveField(
            model_name='machineatelierportatif',
            name='type_machine_portatif',
        ),
        migrations.RemoveField(
            model_name='pompehydrophore',
            name='capacite_pompe',
        ),
        migrations.RemoveField(
            model_name='pompehydrophore',
            name='marque_pompe',
        ),
        migrations.RemoveField(
            model_name='siphon',
            name='sanitaire',
        ),
        migrations.AddField(
            model_name='compresseur',
            name='debit',
            field=models.CharField(choices=[('250L/MIN', '250L/MIN'), ('360L/MIN', '360L/MIN'), ('1000L/MIN', '1000L/MIN'), ('900L/MIN', '900L/MIN'), ('1050L/MIN', '1050L/MIN'), ('2800L/MIN', '2800L/MIN'), ('3600L/MIN', '3600L/MIN'), ('3000L/MIN', '3000L/MIN'), ('1300L/MIN', '1300L/MIN'), ('465L/MIN', '465L/MIN'), ('280L/MIN', '280L/MIN')], default=1, max_length=20, verbose_name='DEBIT'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='groupeelectrogene',
            name='carburant',
            field=models.CharField(choices=[('ESSENCE', 'ESSENCE'), ('DIESEL', 'DIESEL')], default=1, max_length=20, verbose_name='TYPE CARBURANT'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='groupeelectrogene',
            name='marque',
            field=models.CharField(choices=[('EINHELL', 'EINHELL'), ('EMERGY', 'EMERGY'), ('DEWALT', 'DEWALT'), ('IMO ITALIA', 'IMO ITALIA'), ('MAKITA', 'MAKITA'), ('STIHL', 'STIHL'), ('ROBEN', 'ROBEN'), ('SACO', 'SACO'), ('TALA', 'TALA'), ('DEUTZ', 'DEUTZ'), ('PERKINS', 'PERKINS')], default=1, max_length=20, verbose_name='MARQUE'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='machineateliernonportatif',
            name='diametre',
            field=models.CharField(choices=[('5MM', '5MM'), ('6MM', '6MM'), ('8MM', '8MM'), ('10MM', '10MM'), ('12MM', '12MM'), ('14MM', '14MM'), ('16MM', '16MM'), ('20MM', '20MM'), ('25MM', '25MM'), ('32MM', '32MM'), ('50MM', '50MM'), ('63MM', '63MM'), ('90MM', '90MM'), ('110MM', '110MM'), ('230MM', '230MM'), ('125MM', '125MM')], default=1, max_length=20, verbose_name='DIAMETRE'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='machineatelierportatif',
            name='diametre',
            field=models.CharField(choices=[('5MM', '5MM'), ('6MM', '6MM'), ('8MM', '8MM'), ('10MM', '10MM'), ('12MM', '12MM'), ('14MM', '14MM'), ('16MM', '16MM'), ('20MM', '20MM'), ('25MM', '25MM'), ('32MM', '32MM'), ('50MM', '50MM'), ('63MM', '63MM'), ('90MM', '90MM'), ('110MM', '110MM'), ('230MM', '230MM'), ('125MM', '125MM')], default=1, max_length=20, verbose_name='DIAMETRE'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='machineatelierportatif',
            name='puissance_machine',
            field=models.CharField(choices=[('100W', '100W'), ('120W', '120W'), ('150W', '150W'), ('180W', '180W'), ('200W', '200W'), ('240W', '240W'), ('250W', '250W'), ('300W', '300W'), ('350W', '350W'), ('370W', '370W'), ('400W', '400W'), ('450W', '450W'), ('500W', '500W'), ('550W', '550W'), ('600W', '600W'), ('630W', '630W'), ('650W', '650W'), ('700W', '700W'), ('701W', '701W'), ('710W', '710W'), ('720W', '720W'), ('750W', '750W'), ('770W', '770W'), ('800W', '800W'), ('815W', '815W'), ('840W', '840W'), ('850W', '850W'), ('860W', '860W'), ('900W', '900W'), ('1000W', '1000W'), ('1050W', '1050W'), ('1010W', '1010W'), ('1100W', '1100W'), ('1150W', '1150W'), ('1200W', '1200W'), ('1230W', '1230W'), ('1250W', '1250W'), ('1280W', '1280W'), ('1300W', '1300W'), ('1320W', '1320W'), ('1400W', '1400W'), ('1500W', '1500W'), ('1600W', '1600W'), ('1650W', '1650W'), ('1700W', '1700W'), ('1750W', '1750W'), ('1800W', '1800W'), ('1900W', '1900W'), ('2000W', '2000W'), ('2100W', '2100W'), ('2200W', '2200W'), ('2250W', '2250W'), ('2300W', '2300W'), ('2350W', '2350W'), ('2400W', '2400W'), ('2600W', '2600W'), ('2800W', '2800W'), ('3000W', '3000W'), ('12800W', '12800W')], default=1, max_length=20, verbose_name='PUISSANCE'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='machineatelierportatif',
            name='type_machine_non_portatif',
            field=models.CharField(choices=[('VISSEUSE', 'VISSEUSE')], default=1, max_length=20, verbose_name='TYPE MACHINE'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='motopompe',
            name='debit',
            field=models.CharField(choices=[('250L/MIN', '250L/MIN'), ('360L/MIN', '360L/MIN'), ('1000L/MIN', '1000L/MIN'), ('900L/MIN', '900L/MIN'), ('1050L/MIN', '1050L/MIN'), ('2800L/MIN', '2800L/MIN'), ('3600L/MIN', '3600L/MIN'), ('3000L/MIN', '3000L/MIN'), ('1300L/MIN', '1300L/MIN'), ('465L/MIN', '465L/MIN'), ('280L/MIN', '280L/MIN')], default=1, max_length=20, verbose_name='DEBIT'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='motopompe',
            name='hauteur_max',
            field=models.CharField(choices=[('5.5M', '5.5M'), ('8M', '8M'), ('9M', '9M'), ('10M', '10M'), ('11M', '11M'), ('26M', '26M'), ('36M', '36M'), ('65M', '65M'), ('90M', '90M'), ('116M', '116M'), ('141M', '141M'), ('202M', '202M'), ('203M', '203M'), ('228M', '228M'), ('195M', '195M'), ('258M', '258M'), ('271M', '271M'), ('352M', '352M'), ('399M', '399M'), ('419M', '419M'), ('420M', '420M'), ('424M', '424M'), ('485M', '485M'), ('505M', '505M'), ('50M', '50M'), ('80M', '80M'), ('100M', '100M'), ('58M', '58M'), ('70M', '70M'), ('41M', '41M'), ('50M', '50M'), ('70M', '70M'), ('18.5M', '18.5M')], default=1, max_length=20, verbose_name='HAUTEUR'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='pompehydrophore',
            name='debit',
            field=models.CharField(choices=[('300 L/H', '300 L/H'), ('600 L/H', '600 L/H'), ('1200 L/H', '1200 L/H'), ('1500 L/H', '1500 L/H'), ('1800 L/H', '1800 L/H'), ('3000 L/H', '3000 L/H'), ('3800 L/H', '3800 L/H'), ('4020 L/H', '4020 L/H'), ('4600 L/H', '4600 L/H'), ('6800 L/H', '6800 L/H'), ('10020 L/H', '10020 L/H'), ('15000 L/H', '15000 L/H'), ('15700 L/H', '15700 L/H'), ('17500 L/H', '17500 L/H'), ('18000 L/H', '18000 L/H'), ('23000 L/H', '23000 L/H')], default=1, max_length=20, verbose_name='DEBIT'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='pompehydrophore',
            name='hauteur_max',
            field=models.CharField(choices=[('5.5M', '5.5M'), ('8M', '8M'), ('9M', '9M'), ('10M', '10M'), ('11M', '11M'), ('26M', '26M'), ('36M', '36M'), ('65M', '65M'), ('90M', '90M'), ('116M', '116M'), ('141M', '141M'), ('202M', '202M'), ('203M', '203M'), ('228M', '228M'), ('195M', '195M'), ('258M', '258M'), ('271M', '271M'), ('352M', '352M'), ('399M', '399M'), ('419M', '419M'), ('420M', '420M'), ('424M', '424M'), ('485M', '485M'), ('505M', '505M'), ('50M', '50M'), ('80M', '80M'), ('100M', '100M'), ('58M', '58M'), ('70M', '70M'), ('41M', '41M'), ('50M', '50M'), ('70M', '70M'), ('18.5M', '18.5M')], default=1, max_length=20, verbose_name='HAUTEUR'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='siphon',
            name='type_sanitaire',
            field=models.CharField(choices=[('BAIGNOIRE', 'BAIGNOIRE'), ('EVIER', 'EVIER'), ('LAVABO', 'LAVABO'), ('SOL', 'SOL')], default=1, max_length=20, verbose_name='TYPE SANITAIRE'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='accessoireshydrophore',
            name='type_accessoires_hydrophore',
            field=models.CharField(choices=[('BOUGIE DE FILTRE', 'BOUGIE DE FILTRE'), ('MANOMETRE', 'MANOMETRE'), ('PRESSOSTAT', 'PRESSOSTAT'), ('PRESSURE CONTROL', 'PRESSURE CONTROL'), ('TE', 'TE')], max_length=20, verbose_name='ACCESSOIRE HYDROPHORES'),
        ),
        migrations.AlterField(
            model_name='ampouleelectrique',
            name='culot',
            field=models.CharField(choices=[('E14', 'E14'), ('E27', 'E27'), ('E40', 'E40')], max_length=20, verbose_name='CULOT'),
        ),
        migrations.AlterField(
            model_name='ampouleelectrique',
            name='forme_ampoule',
            field=models.CharField(choices=[('AR 111', 'AR 111'), ('CAPSULE', 'CAPSULE'), ('COUP DE VENT', 'COUP DE VENT'), ('FLAMME', 'FLAMME'), ('GOUTTE', 'GOUTTE'), ('HELICOÏDALE', 'HELICOÏDALE'), ('LINOLITE', 'LINOLITE'), ('MINI TUBE', 'MINI TUBE'), ('PEPITE', 'PEPITE'), ('SPHERIQUE', 'SPHERIQUE'), ('SPOT', 'SPOT'), ('REFLECTEUR', 'REFLECTEUR')], max_length=20, verbose_name='FORME AMPOULE'),
        ),
        migrations.AlterField(
            model_name='ampouleelectrique',
            name='puissance_ampoule',
            field=models.CharField(choices=[('1W', '1W'), ('3W', '3W'), ('5W', '5W'), ('6W', '6W'), ('9W', '9W'), ('10W', '10W'), ('11W', '11W'), ('12W', '12W'), ('15W', '15W'), ('18W', '18W'), ('32W', '32W'), ('50W', '50W'), ('60W', '60W'), ('100W', '100W'), ('200W', '200W'), ('250W', '250W'), ('400W', '400W'), ('500W', '500W'), ('1000W', '1000W')], max_length=20, verbose_name='PUISSANCE AMPOULE'),
        ),
        migrations.AlterField(
            model_name='ampouleelectrique',
            name='type_ampoule',
            field=models.CharField(choices=[('ECONOMIQUE', 'ECONOMIQUE'), ('HALOGENE', 'HALOGENE'), ('INCANDESCENCE', 'INCANDESCENCE'), ('INFRAROUGE', 'INFRAROUGE'), ('LED', 'LED'), ('PROJECTEUR', 'PROJECTEUR')], max_length=20, verbose_name='TYPE EMPOULE'),
        ),
        migrations.AlterField(
            model_name='appareildemesure',
            name='tension',
            field=models.CharField(choices=[('110V', '110V'), ('230V', '230V'), ('24V', '24V'), ('24VCC', '24VCC'), ('380V', '380V'), ('400V', '400V'), ('48V', '48V'), ('220V', '220V'), ('250V', '250V'), ('500V', '500V'), ('1000V', '1000V')], max_length=20, verbose_name='TENSION'),
        ),
        migrations.AlterField(
            model_name='appareildemesure',
            name='type_appareil_mesure',
            field=models.CharField(choices=[('DIGITAL', 'DIGITAL'), ('MECANIQUE', 'MECANIQUE'), ('PINCE AMPEREMETRIQUE', 'PINCE AMPEREMETRIQUE')], max_length=1, verbose_name='TYPE APPAREIL DE MESURE'),
        ),
        migrations.AlterField(
            model_name='balance',
            name='poids',
            field=models.CharField(choices=[('200KG', '200KG'), ('300KG', '300KG'), ('500KG', '500KG'), ('600KG', '600KG')], max_length=10, verbose_name='POIDS'),
        ),
        migrations.AlterField(
            model_name='balance',
            name='type_balance',
            field=models.CharField(choices=[('ELECTRONIQUE', 'ELECTRONIQUE'), ('MECANIQUE', 'MECANIQUE')], max_length=20, verbose_name='BALANCE'),
        ),
        migrations.AlterField(
            model_name='boitecuisiniere',
            name='dimension',
            field=models.CharField(choices=[('105X105X55', '105X105X55'), ('175X150X80', '175X150X80'), ('225X175X100', '225X175X100'), ('275X225X120', '275X225X120'), ('65X65X45', '65X65X45'), ('105X105X42', '105X105X42'), ('130X130X30', '130X130X30'), ('160X100X45', '160X100X45'), ('220X160X45', '220X160X45'), ('60X60X25', '60X60X25'), ('80X80X30', '80X80X30'), ('80X80MM', '80X80MM'), ('100X100MM', '100X100MM'), ('150X150MM', '150X150MM'), ('200X150MM', '200X150MM')], max_length=20, verbose_name='DIMENSION'),
        ),
        migrations.AlterField(
            model_name='boitecuisiniere',
            name='prix',
            field=models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX'),
        ),
        migrations.AlterField(
            model_name='boitecuisiniere',
            name='units',
            field=models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('USD/JOUR', 'USD/JOUR'), ('USD/PAGE', 'USD/PAGE'), ('USD/M2', 'USD/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE'), ('USD', 'USD'), ('USD/KG', 'USD/KG'), ('USD/PERSONNE', 'USD/PERSONNE'), ('USD/GARDIEN/MOIS', 'USD/GARDIEN/MOIS'), ('USD/LITRE', 'USD/LITRE'), ('USD/SPLIT', 'USD/SPLIT'), ('%', '%'), ('% DU SALAIRE', '% DU SALAIRE'), ('% DU 1ER SALAIRE', '% DU 1ER SALAIRE'), ('% DES FONDS TRANSPORTES', '% DES FONDS TRANSPORTES'), ('USD/PERSONNE/JOUR', 'USD/PERSONNE/JOUR'), ('USD/THEME', 'USD/THEME'), ('USD/KG', 'USD/KG'), ('USD/AN', 'USD/AN'), ('USD/HEURE', 'USD/HEURE'), ('USD/MODULE', 'USD/MODULE')], max_length=50, verbose_name='UNITÉS'),
        ),
        migrations.AlterField(
            model_name='boitederivation',
            name='dimension',
            field=models.CharField(choices=[('105X105X55', '105X105X55'), ('175X150X80', '175X150X80'), ('225X175X100', '225X175X100'), ('275X225X120', '275X225X120'), ('65X65X45', '65X65X45'), ('105X105X42', '105X105X42'), ('130X130X30', '130X130X30'), ('160X100X45', '160X100X45'), ('220X160X45', '220X160X45'), ('60X60X25', '60X60X25'), ('80X80X30', '80X80X30'), ('80X80MM', '80X80MM'), ('100X100MM', '100X100MM'), ('150X150MM', '150X150MM'), ('200X150MM', '200X150MM')], max_length=20),
        ),
        migrations.AlterField(
            model_name='boitederivation',
            name='marque',
            field=models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('SUPREMA', 'SUPREMA'), ('TELEMECA', 'TELEMECA')], max_length=20, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='boitederivation',
            name='type_derivation',
            field=models.CharField(choices=[('EMBOUT', 'EMBOUT'), ('MACON', 'MACON')], max_length=20, verbose_name='TYPE DE DERIVATION'),
        ),
        migrations.AlterField(
            model_name='chargeurbatterie',
            name='capacite_chargeur',
            field=models.CharField(choices=[('20 A 120 AH', '20 A 120 AH'), ('20 A 400 AH', '20 A 400 AH'), ('250 AH', '250 AH')], max_length=20, verbose_name='CAPACITE'),
        ),
        migrations.AlterField(
            model_name='clefmolette',
            name='dimension_clef_molette',
            field=models.CharField(choices=[('10 POUCES', '10 POUCES'), ('12 POUCES', '12 POUCES'), ('14 POUCES', '14 POUCES'), ('36 POUCES', '36 POUCES')], max_length=50, verbose_name='DIMENSION CLEF'),
        ),
        migrations.AlterField(
            model_name='coffretelectrique',
            name='encastre_sailli',
            field=models.CharField(choices=[('SAILLI', 'SAILLI'), ('ENCASTRE', 'ENCASTRE')], max_length=20, verbose_name='ENCASTRE_SAILLI'),
        ),
        migrations.AlterField(
            model_name='coffretelectrique',
            name='marque',
            field=models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('SUPREMA', 'SUPREMA'), ('TELEMECA', 'TELEMECA')], max_length=20, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='coffretelectrique',
            name='nombre_module',
            field=models.CharField(choices=[('4', '4'), ('6', '6'), ('8', '8'), ('12', '12')], max_length=20, verbose_name='NOMBRE DE MODULE'),
        ),
        migrations.AlterField(
            model_name='compresseur',
            name='capacite_compresseur',
            field=models.CharField(choices=[('6 LITRES', '6 LITRES'), ('24 LITRES', '24 LITRES'), ('50 LITRES', '50 LITRES'), ('100 LITRES', '100 LITRES'), ('200 LITRES', '200 LITRES'), ('300 LITRES', '300 LITRES')], max_length=20, verbose_name='CAPACITE'),
        ),
        migrations.AlterField(
            model_name='compresseur',
            name='marque_marchine',
            field=models.CharField(choices=[('EINHELL', 'EINHELL'), ('EMERGY', 'EMERGY'), ('DEWALT', 'DEWALT'), ('IMO ITALIA', 'IMO ITALIA'), ('MAKITA', 'MAKITA'), ('STIHL', 'STIHL'), ('ROBEN', 'ROBEN'), ('SACO', 'SACO'), ('TALA', 'TALA'), ('DEUTZ', 'DEUTZ'), ('PERKINS', 'PERKINS')], max_length=20, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='compresseur',
            name='pression',
            field=models.CharField(choices=[('7 BARS', '7 BARS'), ('8 BARS', '8 BARS'), ('10 BARS', '10 BARS'), ('100 BARS', '100 BARS'), ('120 BARS', '120 BARS'), ('150 BARS', '150 BARS')], max_length=20, verbose_name='CAPACITE'),
        ),
        migrations.AlterField(
            model_name='compresseur',
            name='puissance_compresseur',
            field=models.CharField(choices=[('1100W', '1100W'), ('1125W', '1125W'), ('1500W', '1500W'), ('1875W', '1875W'), ('3000W', '3000W')], max_length=20, verbose_name='PUISSANCE'),
        ),
        migrations.AlterField(
            model_name='contacteur',
            name='intensite',
            field=models.CharField(choices=[('25A', '25A'), ('40A', '40A'), ('63A', '63A'), ('9A', '9A'), ('1000A', '1000A'), ('115A', '115A'), ('12A', '12A'), ('150A', '150A'), ('185A', '18A'), ('225A', '225A'), ('100A', '100A'), ('125A', '125A'), ('160A', '160A'), ('200A', '200A'), ('80A', '80A'), ('250A', '250A'), ('40A', '40A'), ('400A', '400A'), ('64A', '64A'), ('18A', '18A')], max_length=20, verbose_name='INTENSITE'),
        ),
        migrations.AlterField(
            model_name='contacteur',
            name='marque',
            field=models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('SUPREMA', 'SUPREMA'), ('TELEMECA', 'TELEMECA')], max_length=20, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='contacteur',
            name='nombre_pole',
            field=models.CharField(choices=[('2', '2'), ('3', '3'), ('4', '4')], max_length=20, verbose_name='NOMBRE DE POLE'),
        ),
        migrations.AlterField(
            model_name='contacteur',
            name='puissance',
            field=models.CharField(choices=[('4KW', '4KW'), ('5.5KW', '5.5KW'), ('7.5KW', '7.5KW'), ('11KW', '11KW'), ('55KW', '55KW'), ('90KW', '90KW'), ('110KW', '110KW')], max_length=20, verbose_name='PUISSANCE'),
        ),
        migrations.AlterField(
            model_name='contacteur',
            name='tension',
            field=models.CharField(choices=[('110V', '110V'), ('230V', '230V'), ('24V', '24V'), ('24VCC', '24VCC'), ('380V', '380V'), ('400V', '400V'), ('48V', '48V'), ('220V', '220V'), ('250V', '250V'), ('500V', '500V'), ('1000V', '1000V')], max_length=20, verbose_name='TENSION'),
        ),
        migrations.AlterField(
            model_name='controleaccesetpointage',
            name='marque_equipement',
            field=models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('SUPREMA', 'SUPREMA'), ('TELEMECA', 'TELEMECA')], max_length=50, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='controleaccesetpointage',
            name='mode_fonctionnement',
            field=models.CharField(choices=[('CODE', 'CODE'), ('BADGE', 'BADGE'), ('BADGE + EMPREINTE DIGITALE', 'BADGE + EMPREINTE DIGITALE'), ('EMPREINTE DIGITALE', 'EMPREINTE DIGITALE')], max_length=50, verbose_name='MODE DE FONCTIONNEMENT'),
        ),
        migrations.AlterField(
            model_name='controleaccesetpointage',
            name='pointage_presence',
            field=models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=50, verbose_name='POINTAGE PRESENCE'),
        ),
        migrations.AlterField(
            model_name='convertisseur',
            name='Chargeur_convertisseur',
            field=models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=20, verbose_name='CHARGEUR CONVERTISSEUR'),
        ),
        migrations.AlterField(
            model_name='convertisseur',
            name='marque_convertisseur',
            field=models.CharField(choices=[('VICTRON', 'VICTRON'), ('WESTECH', 'WESTECH')], max_length=20, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='convertisseur',
            name='puissance_convertisseur',
            field=models.CharField(choices=[('300W', '300W'), ('600W', '600W'), ('800W', '800W'), ('1000W', '1000W'), ('2000W', '2000W'), ('3000W', '3000W'), ('4000W', '4000W'), ('5000W', '5000W')], max_length=20, verbose_name='PUISSANCE CONVERTISSEUR'),
        ),
        migrations.AlterField(
            model_name='convertisseur',
            name='sinus_pur',
            field=models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=20, verbose_name='SINUS PUR'),
        ),
        migrations.AlterField(
            model_name='convertisseur',
            name='tension_convertisseur',
            field=models.CharField(choices=[('12V', '12V'), ('12/24V', '12/24V'), ('24V', '24V'), ('48V', '48V')], max_length=20, verbose_name='TENSION CONVERTISSEUR'),
        ),
        migrations.AlterField(
            model_name='cylindre',
            name='type_cylindre',
            field=models.CharField(choices=[('DGC', 'DGC'), ('ITALY', 'ITALY'), ('RENZ', 'RENZ'), ('SISLYE', 'SISLYE'), ('VACHETTE', 'VACHETTE')], max_length=50, verbose_name='TYPE CYLINDRE'),
        ),
        migrations.AlterField(
            model_name='detecteurintrusion',
            name='mode_detection',
            field=models.CharField(choices=[('CHOC', 'CHOC'), ('MOUVEMENT', 'MOUVEMENT')], max_length=20, verbose_name='MODE DE DETECTION'),
        ),
        migrations.AlterField(
            model_name='disjoncteur',
            name='intensite',
            field=models.CharField(choices=[('25A', '25A'), ('40A', '40A'), ('63A', '63A'), ('9A', '9A'), ('1000A', '1000A'), ('115A', '115A'), ('12A', '12A'), ('150A', '150A'), ('185A', '18A'), ('225A', '225A'), ('100A', '100A'), ('125A', '125A'), ('160A', '160A'), ('200A', '200A'), ('80A', '80A'), ('250A', '250A'), ('40A', '40A'), ('400A', '400A'), ('64A', '64A'), ('18A', '18A')], max_length=50, verbose_name='INTENSITE'),
        ),
        migrations.AlterField(
            model_name='disjoncteur',
            name='marque',
            field=models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('SUPREMA', 'SUPREMA'), ('TELEMECA', 'TELEMECA')], max_length=50, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='disjoncteur',
            name='nombre_phase',
            field=models.CharField(choices=[('2P', '2P'), ('4P', '4P')], max_length=50, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='disjoncteurmoteur',
            name='intensite',
            field=models.CharField(choices=[('6-10A', '6-10A'), ('13-17A', '13-17A'), ('17-23A', '17-23A')], max_length=50, verbose_name='INTENSITE'),
        ),
        migrations.AlterField(
            model_name='disjoncteurmoteur',
            name='marque',
            field=models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('SUPREMA', 'SUPREMA'), ('TELEMECA', 'TELEMECA')], max_length=50, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='enregistreurcamerasurveillance',
            name='nombre_canaux',
            field=models.CharField(choices=[('16', '16')], max_length=20, verbose_name='NOMBRE DE CANEAUX'),
        ),
        migrations.AlterField(
            model_name='enseignelumineuse',
            name='format_enseigne',
            field=models.CharField(choices=[('GRAND FORMAT', 'GRAND FORMAT'), ('PETIT FORMAT', 'PETIT FORMAT')], max_length=20, verbose_name='FORMAT ENSEIGNE'),
        ),
        migrations.AlterField(
            model_name='enseignelumineuse',
            name='longueur',
            field=models.CharField(choices=[('2M', '2M'), ('3M', '3M'), ('5M', '5M'), ('10M', '10M'), ('1,20M', '1,20M'), ('15M', '15M'), ('20M', '20M'), ('25M', '25M'), ('50M', '50M'), ('100M', '100M')], max_length=20, verbose_name='LONGUEUR'),
        ),
        migrations.AlterField(
            model_name='equerre',
            name='dimension',
            field=models.CharField(choices=[('300X400MM', '300X400MM'), ('400X600MM', '400X600MM'), ('600X800MM', '600X800MM'), ('800X100MM', '800X100MM'), ('1000X1000MM', '1000X1000MM')], max_length=50, verbose_name='DIMENSION'),
        ),
        migrations.AlterField(
            model_name='flexible',
            name='utilisation',
            field=models.CharField(choices=[('CHAUFFE EAU', 'CHAUFFE EAU'), ('HYDROPHORE', 'HYDROPHORE'), ('LAVABO', 'LAVABO')], max_length=20, verbose_name='FLEXIBLE'),
        ),
        migrations.AlterField(
            model_name='fusible',
            name='intensite',
            field=models.CharField(choices=[('25A', '25A'), ('40A', '40A'), ('63A', '63A'), ('9A', '9A'), ('1000A', '1000A'), ('115A', '115A'), ('12A', '12A'), ('150A', '150A'), ('185A', '18A'), ('225A', '225A'), ('100A', '100A'), ('125A', '125A'), ('160A', '160A'), ('200A', '200A'), ('80A', '80A'), ('250A', '250A'), ('40A', '40A'), ('400A', '400A'), ('64A', '64A'), ('18A', '18A')], max_length=50, verbose_name='INTENSITE'),
        ),
        migrations.AlterField(
            model_name='fusible',
            name='marque',
            field=models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('SUPREMA', 'SUPREMA'), ('TELEMECA', 'TELEMECA')], max_length=50, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='gant',
            name='type_gant',
            field=models.CharField(choices=[('ANTI CHALEUR', 'ANTI CHALEUR'), ('CHANTIER', 'CHANTIER'), ('COTON', 'COTON'), ('CUIRE', 'CUIRE'), ('PLASTIQUE', 'PLASTIQUE')], max_length=50, verbose_name='TYPE DE GANT'),
        ),
        migrations.AlterField(
            model_name='groupeelectrogene',
            name='puissance_groupe',
            field=models.CharField(choices=[('720W', '720W'), ('3100W', '3100W'), ('3500W', '3500W'), ('4875W', '4875W'), ('5000W', '5000W'), ('5500W', '5500W'), ('7500W', '7500W'), ('10000W', '10000W'), ('1KVA', '1KVA'), ('10VA', '10KVA'), ('2,5KVA', '2,5KVA'), ('5,5KVA', '5,5KVA'), ('3,5KVA', '3,5KVA'), ('5KVA', '5KVA'), ('2KVA', '2KVA'), ('3KVA', '3KVA'), ('6,5KVA', '6,5KVA'), ('7,5KVA', '7,5KVA'), ('12,5KVA', '12,5KVA'), ('15KVA', '15KVA'), ('20KVA', '20KVA'), ('38KVA', '38KVA'), ('27KVA', '27KVA'), ('225KVA', '225KVA'), ('30KVA', '30KVA'), ('40KVA', '40KVA'), ('60KVA', '60KVA'), ('50KVA', '50KVA'), ('100KVA', '100KVA')], max_length=20, verbose_name='PUISSANCE'),
        ),
        migrations.AlterField(
            model_name='groupeelectrogene',
            name='silencieux',
            field=models.CharField(choices=[('OUI', 'OUI'), ('NOM', 'NOM')], max_length=20, verbose_name='SILENCIEUX'),
        ),
        migrations.AlterField(
            model_name='interrupteurdifferentiel',
            name='intensite',
            field=models.CharField(choices=[('25A', '25A'), ('40A', '40A'), ('63A', '63A'), ('9A', '9A'), ('1000A', '1000A'), ('115A', '115A'), ('12A', '12A'), ('150A', '150A'), ('185A', '18A'), ('225A', '225A'), ('100A', '100A'), ('125A', '125A'), ('160A', '160A'), ('200A', '200A'), ('80A', '80A'), ('250A', '250A'), ('40A', '40A'), ('400A', '400A'), ('64A', '64A'), ('18A', '18A')], max_length=50, verbose_name='INTENSITE'),
        ),
        migrations.AlterField(
            model_name='interrupteurdifferentiel',
            name='marque',
            field=models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('SUPREMA', 'SUPREMA'), ('TELEMECA', 'TELEMECA')], max_length=50, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='interrupteurdifferentiel',
            name='nombre_phase',
            field=models.CharField(choices=[('2', '2'), ('3', '3'), ('4', '4')], max_length=50, verbose_name='NOMBRE DE PHASE'),
        ),
        migrations.AlterField(
            model_name='interrupteurdifferentiel',
            name='sensibilite',
            field=models.CharField(choices=[('30MA', '30MA'), ('300MA', '300MA')], max_length=50, verbose_name='SENSIBILITTE'),
        ),
        migrations.AlterField(
            model_name='interrupteurelectrique',
            name='marque',
            field=models.CharField(choices=[('INGELEC', 'INGELEC'), ('LE GRAND', 'LE GRAND'), ('NIKO', 'NIKO'), ('SCHNEIDER', 'SCHNEIDER'), ('VICKO', 'VICKO')], max_length=50, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='interrupteurelectrique',
            name='schema',
            field=models.CharField(choices=[('SCHEMA1', 'SCHEMA1'), ('SCHEMA2', 'SCHEMA2'), ('SCHEMA3', 'SCHEMA3'), ('SCHEMA5', 'SCHEMA5'), ('SCHEMA6', 'SCHEMA6'), ('SCHEMA7', 'SCHEMA7')], max_length=50, verbose_name='SCHEMA'),
        ),
        migrations.AlterField(
            model_name='inverseur',
            name='intensite',
            field=models.CharField(choices=[('63A', '63A'), ('100A', '100A'), ('125A', '125A'), ('160A', '160A'), ('200A', '200A')], max_length=50, verbose_name='INTENSITE'),
        ),
        migrations.AlterField(
            model_name='inverseur',
            name='nombre_prise',
            field=models.CharField(choices=[('3', '3'), ('4', '4'), ('5', '5'), ('6', '6')], max_length=50, verbose_name='NOMBRE DE PRISE'),
        ),
        migrations.AlterField(
            model_name='machineateliernonportatif',
            name='marque_marchine',
            field=models.CharField(choices=[('EINHELL', 'EINHELL'), ('EMERGY', 'EMERGY'), ('DEWALT', 'DEWALT'), ('IMO ITALIA', 'IMO ITALIA'), ('MAKITA', 'MAKITA'), ('STIHL', 'STIHL'), ('ROBEN', 'ROBEN'), ('SACO', 'SACO'), ('TALA', 'TALA'), ('DEUTZ', 'DEUTZ'), ('PERKINS', 'PERKINS')], max_length=20, verbose_name='MACHINE PORTATIF'),
        ),
        migrations.AlterField(
            model_name='machineateliernonportatif',
            name='puissance_machine',
            field=models.CharField(choices=[('100W', '100W'), ('120W', '120W'), ('150W', '150W'), ('180W', '180W'), ('200W', '200W'), ('240W', '240W'), ('250W', '250W'), ('300W', '300W'), ('350W', '350W'), ('370W', '370W'), ('400W', '400W'), ('450W', '450W'), ('500W', '500W'), ('550W', '550W'), ('600W', '600W'), ('630W', '630W'), ('650W', '650W'), ('700W', '700W'), ('701W', '701W'), ('710W', '710W'), ('720W', '720W'), ('750W', '750W'), ('770W', '770W'), ('800W', '800W'), ('815W', '815W'), ('840W', '840W'), ('850W', '850W'), ('860W', '860W'), ('900W', '900W'), ('1000W', '1000W'), ('1050W', '1050W'), ('1010W', '1010W'), ('1100W', '1100W'), ('1150W', '1150W'), ('1200W', '1200W'), ('1230W', '1230W'), ('1250W', '1250W'), ('1280W', '1280W'), ('1300W', '1300W'), ('1320W', '1320W'), ('1400W', '1400W'), ('1500W', '1500W'), ('1600W', '1600W'), ('1650W', '1650W'), ('1700W', '1700W'), ('1750W', '1750W'), ('1800W', '1800W'), ('1900W', '1900W'), ('2000W', '2000W'), ('2100W', '2100W'), ('2200W', '2200W'), ('2250W', '2250W'), ('2300W', '2300W'), ('2350W', '2350W'), ('2400W', '2400W'), ('2600W', '2600W'), ('2800W', '2800W'), ('3000W', '3000W'), ('12800W', '12800W')], max_length=20, verbose_name='PUISSANCE'),
        ),
        migrations.AlterField(
            model_name='machineateliernonportatif',
            name='type_machine_non_portatif',
            field=models.CharField(choices=[('ASPIRATEUR', 'ASPIRATEUR'), ('BOULONNEUR', 'BOULONNEUR'), ('BURINEUR', 'BURINEUR'), ('COUPE CARRELAGE', 'COUPE CARRELAGE'), ('COUPE HAIE', 'COUPE HAIE'), ('DECAPEUR', 'DECAPEUR'), ('DEFONCEUSE', 'DEFONCEUSE'), ('FOREUSE', 'FOREUSE'), ('FRAISEUSE', 'FRAISEUSE'), ('MARTEAU PERFORATEUR', 'MARTEAU PERFORATEUR'), ('MELANGEUR', 'MELANGEUR'), ('MELEUSE', 'MELEUSE'), ('PALAN ELECTRIQUE', 'PALAN ELECTRIQUE'), ('PERCEUSE', 'PERCEUSE'), ('PERFORATEUR', 'PERFORATEUR'), ('PISTOLET A SOUDER', 'PISTOLET A SOUDER'), ('POMPE', 'POMPE'), ('PONCEUSE', 'PONCEUSE'), ('RABOT', 'RABOT'), ('RABOTEUSE', 'RABOTEUSE'), ('RAINUREUSE', 'RAINUREUSE'), ('SCIE', 'SCIE'), ('SOUFFLEUR', 'SOUFFLEUR'), ('TONDEUSE', 'TONDEUSE'), ('TOURET', 'TOURET'), ('TRONÇONNEUSE', 'TRONÇONNEUSE'), ('DEBROUSSAILLEUSE', 'DEBROUSSAILLEUSE')], max_length=20, verbose_name='TYPE MACHINE'),
        ),
        migrations.AlterField(
            model_name='machineatelierportatif',
            name='marque_marchine',
            field=models.CharField(choices=[('EINHELL', 'EINHELL'), ('EMERGY', 'EMERGY'), ('DEWALT', 'DEWALT'), ('IMO ITALIA', 'IMO ITALIA'), ('MAKITA', 'MAKITA'), ('STIHL', 'STIHL'), ('ROBEN', 'ROBEN'), ('SACO', 'SACO'), ('TALA', 'TALA'), ('DEUTZ', 'DEUTZ'), ('PERKINS', 'PERKINS')], max_length=20, verbose_name='MACHINE PORTATIF'),
        ),
        migrations.AlterField(
            model_name='mechebeton',
            name='diametre',
            field=models.CharField(choices=[('5MM', '5MM'), ('6MM', '6MM'), ('8MM', '8MM'), ('10MM', '10MM'), ('12MM', '12MM'), ('14MM', '14MM'), ('16MM', '16MM'), ('20MM', '20MM'), ('25MM', '25MM'), ('32MM', '32MM'), ('50MM', '50MM'), ('63MM', '63MM'), ('90MM', '90MM'), ('110MM', '110MM'), ('230MM', '230MM'), ('125MM', '125MM')], max_length=20, verbose_name='DIAMETRE'),
        ),
        migrations.AlterField(
            model_name='montecharge',
            name='poids',
            field=models.CharField(choices=[('1 TONNE', '1 TONNE'), ('2 TONNES', '2 TONNES'), ('3 TONNES', '3 TONNES'), ('4 TONNES', '4 TONNES'), ('5 TONNES', '5 TONNES')], max_length=50, verbose_name='POIDS'),
        ),
        migrations.AlterField(
            model_name='moteurelectrique',
            name='marque_moteur',
            field=models.CharField(choices=[('SPERONI', 'SPERONI')], max_length=20, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='moteurelectrique',
            name='nombre_pole',
            field=models.CharField(choices=[('2', '2'), ('3', '3'), ('4', '4')], max_length=20, verbose_name='NOMBRE DE POLE'),
        ),
        migrations.AlterField(
            model_name='moteurelectrique',
            name='puissance_moteur',
            field=models.CharField(choices=[('180W', '180W'), ('250W', '250W'), ('370W', '370W'), ('550W', '550W'), ('750W', '750W'), ('1.1KW', '1.1KW'), ('1.5KW', '1.5KW'), ('2.2KW', '2.2KW'), ('3KW', '3KW'), ('4KW', '4KW'), ('7.5KW', '7.5KW'), ('11KW', '11KW'), ('15KW', '15KW'), ('18.5KW', '18.5KW')], max_length=20, verbose_name='PUISSANCE'),
        ),
        migrations.AlterField(
            model_name='moteurelectrique',
            name='tension_moteur',
            field=models.CharField(choices=[('230V', '230V'), ('400V', '400V')], max_length=20, verbose_name='TENSION'),
        ),
        migrations.AlterField(
            model_name='motopompe',
            name='moteur',
            field=models.CharField(choices=[('DIESEL', 'DIESEL'), ('ESSENCE', 'ESSENCE')], max_length=20, verbose_name='MOTEUR'),
        ),
        migrations.AlterField(
            model_name='motopompe',
            name='puissance_moto_pompe',
            field=models.CharField(choices=[('10HP', '10HP'), ('13HP', '13HP'), ('15HP', '15HP')], max_length=20, verbose_name='PUISSANCE'),
        ),
        migrations.AlterField(
            model_name='motopompe',
            name='section_moto_pompe',
            field=models.CharField(choices=[('2"', '2"'), ('3"', '3"'), ('4"', '4"')], max_length=20, verbose_name='SECTION'),
        ),
        migrations.AlterField(
            model_name='onduleur',
            name='marque',
            field=models.CharField(choices=[('SCHNEIDER', 'SCHNEIDER'), ('APC', 'APC'), ('MACKEL', 'MACKEL'), ('VINCKIER', 'VINCKIER'), ('ABB', 'ABB'), ('WESTECH', 'WESTECH'), ('VICTRON', 'VICTRON'), ('MERCURY', 'MERCURY'), ('VICKO', 'VICKO'), ('LE GRAND', 'LE GRAND'), ('NIKO', 'NIKO'), ('INGELEC', 'INGELEC')], max_length=20, verbose_name='MARQUE '),
        ),
        migrations.AlterField(
            model_name='onduleur',
            name='puissance',
            field=models.CharField(choices=[('4KW', '4KW'), ('335KW', '335KW'), ('55KW', '55KW'), ('5,5KW', '5,5KW'), ('75KW', '75KW'), ('90KW', '90KW'), ('7,5KW', '7,5KW'), ('110KW', '110KW'), ('11KW', '11KW'), ('2000W', '2000W'), ('1000W', '1000W'), ('800W', '800W'), ('600W', '600W'), ('300W', '300W'), ('5000W', '5000W'), ('4000W', '4000W'), ('3000W', '3000W'), ('3W', '3W'), ('6W', '6W'), ('12W', '12W'), ('48W', '48W'), ('40W', '40W'), ('20W', '20W'), ('16W', '16W'), ('8W', '8W')], max_length=20, verbose_name='PUISSANCE'),
        ),
        migrations.AlterField(
            model_name='palanmecanique',
            name='poids',
            field=models.CharField(choices=[('1 TONNE', '1 TONNE'), ('2 TONNES', '2 TONNES'), ('3 TONNES', '3 TONNES'), ('4 TONNES', '4 TONNES'), ('5 TONNES', '5 TONNES')], max_length=50, verbose_name='POID PALAN'),
        ),
        migrations.AlterField(
            model_name='paumelle',
            name='dimension',
            field=models.CharField(choices=[('85MM', '85MM'), ('90MM', '90MM'), ('95MM', '95MM'), ('120MM', '120MM'), ('140MM', '140MM'), ('160MM', '160MM')], max_length=50, verbose_name='DIMENSION'),
        ),
        migrations.AlterField(
            model_name='pompeeau',
            name='debit_pompe',
            field=models.CharField(choices=[('300 L/H', '300 L/H'), ('600 L/H', '600 L/H'), ('1200 L/H', '1200 L/H'), ('1500 L/H', '1500 L/H'), ('1800 L/H', '1800 L/H'), ('3000 L/H', '3000 L/H'), ('3800 L/H', '3800 L/H'), ('4020 L/H', '4020 L/H'), ('4600 L/H', '4600 L/H'), ('6800 L/H', '6800 L/H'), ('10020 L/H', '10020 L/H'), ('15000 L/H', '15000 L/H'), ('15700 L/H', '15700 L/H'), ('17500 L/H', '17500 L/H'), ('18000 L/H', '18000 L/H'), ('23000 L/H', '23000 L/H')], max_length=20, verbose_name='DEBIT'),
        ),
        migrations.AlterField(
            model_name='pompeeau',
            name='hauteur_pompe',
            field=models.CharField(choices=[('5.5M', '5.5M'), ('8M', '8M'), ('9M', '9M'), ('10M', '10M'), ('11M', '11M'), ('26M', '26M'), ('36M', '36M'), ('65M', '65M'), ('90M', '90M'), ('116M', '116M'), ('141M', '141M'), ('202M', '202M'), ('203M', '203M'), ('228M', '228M'), ('195M', '195M'), ('258M', '258M'), ('271M', '271M'), ('352M', '352M'), ('399M', '399M'), ('419M', '419M'), ('420M', '420M'), ('424M', '424M'), ('485M', '485M'), ('505M', '505M'), ('50M', '50M'), ('80M', '80M'), ('100M', '100M'), ('58M', '58M'), ('70M', '70M'), ('41M', '41M'), ('50M', '50M'), ('70M', '70M'), ('18.5M', '18.5M')], max_length=20, verbose_name='HAUTEUR'),
        ),
        migrations.AlterField(
            model_name='pompeeau',
            name='marque_pompe',
            field=models.CharField(choices=[('EINHELL', 'EINHELL'), ('EMERGY', 'EMERGY'), ('DEWALT', 'DEWALT'), ('IMO ITALIA', 'IMO ITALIA'), ('MAKITA', 'MAKITA'), ('STIHL', 'STIHL'), ('ROBEN', 'ROBEN'), ('SACO', 'SACO'), ('TALA', 'TALA'), ('DEUTZ', 'DEUTZ'), ('PERKINS', 'PERKINS')], max_length=20, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='pompeeau',
            name='puissance_pompe',
            field=models.CharField(choices=[('270W', '270W'), ('300W', '300W'), ('370W', '370W'), ('375W', '375W'), ('550W', '550W'), ('650W', '650W'), ('690W', '690W'), ('750W', '750W'), ('780W', '780W'), ('900W', '900W'), ('1000W', '1000W'), ('1100W', '1100W'), ('1125W', '1125W'), ('1300W', '1300W'), ('1500W', '1500W'), ('2200W', '2200W'), ('3000W', '3000W'), ('3750W', '3750W'), ('4000W', '4000W'), ('4800W', '4800W'), ('5500W', '5500W'), ('7500W', '7500W'), ('11000W', '11000W'), ('15000W', '15000W'), ('18500W', '18500W')], max_length=20, verbose_name='PUISSANCE'),
        ),
        migrations.AlterField(
            model_name='pompeforage',
            name='force_pompe',
            field=models.CharField(choices=[('900N', '900N'), ('1300N', '1300N')], max_length=20, verbose_name='FORCE POMPE'),
        ),
        migrations.AlterField(
            model_name='pompeforage',
            name='marque_pompe',
            field=models.CharField(choices=[('EINHELL', 'EINHELL'), ('EMERGY', 'EMERGY'), ('DEWALT', 'DEWALT'), ('IMO ITALIA', 'IMO ITALIA'), ('MAKITA', 'MAKITA'), ('STIHL', 'STIHL'), ('ROBEN', 'ROBEN'), ('SACO', 'SACO'), ('TALA', 'TALA'), ('DEUTZ', 'DEUTZ'), ('PERKINS', 'PERKINS')], max_length=20, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='pompehydrophore',
            name='puissance_pompe',
            field=models.CharField(choices=[('5.5 HP', '5.5 HP'), ('6.5 HP', '6.5 HP'), ('4.0 HP', '4.0 HP'), ('2HP', '2HP'), ('3HP', '3HP'), ('4HP', '4HP'), ('10HP', '10HP'), ('7.5HP', '7.5HP'), ('0.5 HP', '0.5HP'), ('0.75HP', '0.75HP'), ('1HP', '1HP'), ('1.5HP', '1.5HP'), ('15HP', '15HP'), ('20HP', '20HP'), ('25HP', '25HP'), ('30HP', '30HP'), ('40HP', '40HP')], max_length=20, verbose_name='PUISSANCE'),
        ),
        migrations.AlterField(
            model_name='priseelectrique',
            name='marque',
            field=models.CharField(choices=[('INGELEC', 'INGELEC'), ('LE GRAND', 'LE GRAND'), ('NIKO', 'NIKO'), ('SCHNEIDER', 'SCHNEIDER'), ('VICKO', 'VICKO')], max_length=20, verbose_name='MARQUE'),
        ),
        migrations.AlterField(
            model_name='priseelectrique',
            name='type_prise',
            field=models.CharField(choices=[('ANTENNE', 'ANTENNE'), ('AVEC TERRE', 'AVEC TERRE'), ('CUISINIERE', 'CUISINIERE'), ('HERMETIQUE', 'HERMETIQUE'), ('MURALE', 'MURALE'), ('SIMPLE', 'SIMPLE')], max_length=20, verbose_name='TYPE DE PRISE'),
        ),
        migrations.AlterField(
            model_name='rallonge',
            name='longueur',
            field=models.CharField(choices=[('2M', '2M'), ('3M', '3M'), ('5M', '5M'), ('10M', '10M'), ('1,20M', '1,20M'), ('15M', '15M'), ('20M', '20M'), ('25M', '25M'), ('50M', '50M'), ('100M', '100M')], max_length=20, verbose_name='RALLONGE'),
        ),
        migrations.AlterField(
            model_name='rallonge',
            name='nombre_prise',
            field=models.CharField(choices=[('3', '3'), ('4', '4'), ('5', '5'), ('6', '6')], max_length=20, verbose_name='NOMBRE\t DE PRISE'),
        ),
        migrations.AlterField(
            model_name='reductionpvc',
            name='reduction',
            field=models.CharField(choices=[('63/50', '63/50'), ('90/63', '90/63'), ('110/90', '110/90')], max_length=20, verbose_name='REDUCTION'),
        ),
        migrations.AlterField(
            model_name='sechemain',
            name='matiere',
            field=models.CharField(choices=[('INOX', 'INOX'), ('PLASTIQUE', 'PLASTIQUE')], max_length=50, verbose_name='MATIERE'),
        ),
        migrations.AlterField(
            model_name='stabilisateur',
            name='marque',
            field=models.CharField(choices=[('SCHNEIDER', 'SCHNEIDER'), ('APC', 'APC'), ('MACKEL', 'MACKEL'), ('VINCKIER', 'VINCKIER'), ('ABB', 'ABB'), ('WESTECH', 'WESTECH'), ('VICTRON', 'VICTRON'), ('MERCURY', 'MERCURY'), ('VICKO', 'VICKO'), ('LE GRAND', 'LE GRAND'), ('NIKO', 'NIKO'), ('INGELEC', 'INGELEC')], max_length=20, verbose_name='MARQUE '),
        ),
        migrations.AlterField(
            model_name='stabilisateur',
            name='prix',
            field=models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX'),
        ),
        migrations.AlterField(
            model_name='stabilisateur',
            name='puissance',
            field=models.CharField(choices=[('4KW', '4KW'), ('335KW', '335KW'), ('55KW', '55KW'), ('5,5KW', '5,5KW'), ('75KW', '75KW'), ('90KW', '90KW'), ('7,5KW', '7,5KW'), ('110KW', '110KW'), ('11KW', '11KW'), ('2000W', '2000W'), ('1000W', '1000W'), ('800W', '800W'), ('600W', '600W'), ('300W', '300W'), ('5000W', '5000W'), ('4000W', '4000W'), ('3000W', '3000W'), ('3W', '3W'), ('6W', '6W'), ('12W', '12W'), ('48W', '48W'), ('40W', '40W'), ('20W', '20W'), ('16W', '16W'), ('8W', '8W')], max_length=20, verbose_name='PUISSANCE'),
        ),
        migrations.AlterField(
            model_name='tuyauterie',
            name='diametre',
            field=models.CharField(choices=[('5MM', '5MM'), ('6MM', '6MM'), ('8MM', '8MM'), ('10MM', '10MM'), ('12MM', '12MM'), ('14MM', '14MM'), ('16MM', '16MM'), ('20MM', '20MM'), ('25MM', '25MM'), ('32MM', '32MM'), ('50MM', '50MM'), ('63MM', '63MM'), ('90MM', '90MM'), ('110MM', '110MM'), ('230MM', '230MM'), ('125MM', '125MM')], max_length=20, verbose_name='DIAMETRE'),
        ),
        migrations.AlterField(
            model_name='tuyauterie',
            name='localisation',
            field=models.CharField(choices=[('BOUCHON', 'BOUCHON'), ('COUDE', 'COUDE'), ('MANCHON', 'MANCHON'), ('RACCORD', 'RACCORD'), ('TE', 'TE'), ('TUYAU', 'TUYAU'), ('VANNE', 'VANNE')], max_length=10, verbose_name='LOCALISATION'),
        ),
        migrations.AlterField(
            model_name='tuyauterie',
            name='matiere_tuyauterie',
            field=models.CharField(choices=[('PPR', 'PPR'), ('PVC', 'PVC')], max_length=20, verbose_name='MATIERE'),
        ),
        migrations.DeleteModel(
            name='OutilsJardinage',
        ),
    ]
