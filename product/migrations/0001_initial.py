# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-11 03:54
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessoiresHydrophore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_accessoires_hydrophore', models.CharField(choices=[('Bougie de filtre', 'Bougie de filtre'), ('Manomètre', 'Manomètre'), ('Pressostat', 'Pressostat'), ('Pressure control', 'Pressure control'), ('Té', 'Té')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Affiche',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_papier', models.CharField(choices=[('Simple cartonné', 'Simple cartonné'), ('Papier doré', 'Papier doré'), ('Papier couché 135gr', 'Papier couché 135gr'), ('Papier couché blanc 350 gr', 'Papier couché blanc 350 gr')], max_length=50)),
                ('face_impression', models.CharField(choices=[('Recto', 'Recto'), ('Recto/verso', 'Recto/verso')], max_length=50)),
                ('format_papier', models.CharField(choices=[('A2', 'A2'), ('A3', 'A3'), ('A4', 'A4'), ('A5', 'A5'), ('1/3 A4', '1/3 A4')], max_length=50)),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AmpouleElectrique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_ampoule', models.CharField(choices=[('Economique', 'Economique'), ('Halogène', 'Halogène'), ('Incandescence', 'Incandescence'), ('Infrarouge', 'Infrarouge'), ('Led', 'Led'), ('Projecteur', 'Projecteur')], max_length=20)),
                ('culot', models.CharField(choices=[('E14', 'E14'), ('E27', 'E27'), ('E40', 'E40')], max_length=20)),
                ('puissance_ampoule', models.CharField(choices=[('1W', '1W'), ('3W', '3W'), ('5W', '5W'), ('6W', '6W'), ('9W', '9W'), ('10W', '10W'), ('11W', '11W'), ('12W', '12W'), ('15W', '15W'), ('18W', '18W'), ('32W', '32W'), ('50W', '50W'), ('60W', '60W'), ('100W', '100W'), ('200W', '200W'), ('250W', '250W'), ('400W', '400W'), ('500W', '500W'), ('1000W', '1000W')], max_length=20)),
                ('forme_ampoule', models.CharField(choices=[('AR 111', 'AR 111'), ('Capsule', 'Capsule'), ('Coup de vent', 'Coup de vent'), ('Flamme', 'Flamme'), ('Goutte', 'Goutte'), ('Hélicoïdale', 'Hélicoïdale'), ('Linolite', 'Linolite'), ('Mini tube', 'Mini tube'), ('Pépite', 'Pépite'), ('Sphérique', 'Sphérique'), ('Spot', 'Spot'), ('Réflecteur', 'Réflecteur')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppareilDeMesure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_appareil_mesure', models.CharField(choices=[('Digital', 'Digital'), ('Mécanique', 'Mécanique'), ('Pince ampèremétrique', 'Pince ampèremétrique')], max_length=1)),
                ('tension', models.CharField(choices=[('3.6V', '3.6V'), ('10.8V', '10.8V'), ('12V', '12V'), ('24V', '24V'), ('14.4V', '14.4V'), ('18V', '18V'), ('24V', '24V'), ('24VCC', '24VCC'), ('48V', '48V'), ('110V', '110V'), ('220V', '220V'), ('230V', '230V'), ('240V', '240V'), ('250V', '250V'), ('380V', '380V'), ('400V', '400V'), ('500V', '500V'), ('1000V', '1000V')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('unite_prix', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Armoire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_armoire', models.CharField(choices=[('Armoire basse', 'Armoire basse'), ('Armoire haute', 'Armoire haute'), ('Armoire mi-haute', 'Armoire mi-haute')], max_length=50)),
                ('type_porte', models.CharField(choices=[('Battantes', 'Battantes'), ('Rideaux', 'Rideaux')], max_length=50)),
                ('dimension_armoire', models.CharField(choices=[('01', '100x120cm'), ('02', '180x100cm'), ('03', '198x120cm'), ('04', '210x270cm')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssistanceComptable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_intervention', models.CharField(choices=[('C', 'Continue'), ('P', 'Ponctuelle')], max_length=50)),
                ('nombre_employes', models.CharField(choices=[('1', '0-6'), ('2', '6-10'), ('3', '10 et plus')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssistanceFiscale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_intervention', models.CharField(choices=[('C', 'Continue'), ('P', 'Ponctuelle')], max_length=50)),
                ('nombre_employes', models.CharField(choices=[('1', '0-6'), ('2', '6-10'), ('3', '10 et plus')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditEtControleInterne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_intervention', models.CharField(choices=[('C', 'Continue'), ('P', 'Ponctuelle')], max_length=50)),
                ('nombre_employes', models.CharField(choices=[('1', '0-6'), ('2', '6-10'), ('3', '10 et plus')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditFinancier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_intervention', models.CharField(choices=[('C', 'Continue'), ('P', 'Ponctuelle')], max_length=50)),
                ('nombre_employes', models.CharField(choices=[('1', '0-6'), ('2', '6-10'), ('3', '10 et plus')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_balance', models.CharField(choices=[('Electronique', 'Electronique'), ('Mécanique', 'Mécanique')], max_length=20)),
                ('poids', models.CharField(choices=[('200kg', '200kg'), ('300kg', '300kg'), ('500kg', '500kg'), ('600kg', '600kg')], max_length=10)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BoiteCuisiniere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('dimension', models.CharField(choices=[('80x80mm', '80x80mm'), ('100x100mm', '100x100mm'), ('150x150mm', '150x150mm'), ('200x150m', '200x150mm')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BoiteDerivation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('Suprema', 'Suprema'), ('TELEMECA', 'TELEMECA')], max_length=20)),
                ('type_derivation', models.CharField(choices=[('EMBOUT', 'EMBOUT'), ('MACON', 'MACON')], max_length=20)),
                ('dimension', models.CharField(choices=[('60x60x25mm', '60x60x25mm'), ('65x65x45mm', '65x65x45mm'), ('80x80x30mm', '80x80x30mm'), ('105x105x42mm', '105x105x42mm'), ('130x130x30mm', '130x130x30mm'), ('160x100x45mm', '160x100x45mm'), ('220x160x45mm', '220x160x45mm'), ('105x105x55mm', '105x105x55mm'), ('175x150x80mm', '175x150x80mm'), ('225x175x100mm', '225x175x100mm'), ('275x225x120mm', '275x225x120mm')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachetHumide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('dimension', models.CharField(choices=[('30x30mm', '30x30mm'), ('30x38mm', '30x38mm'), ('38x38mm', '38x38mm'), ('40x40mm', '40x40mm'), ('45x45mm', '45x45mm'), ('50x50mm', '50x50mm')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachetImprime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_cachet_imprime', models.CharField(choices=[('Avec manche', 'Avec manche'), ('Avec appareil Trodat', 'Avec appareil Trodat')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachetNumerique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('dimension', models.CharField(choices=[('30x30mm', '30x30mm'), ('30x38mm', '30x38mm'), ('38x38mm', '38x38mm'), ('40x40mm', '40x40mm'), ('45x45mm', '45x45mm'), ('50x50mm', '50x50mm')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CachetSec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_cachet_sec', models.CharField(choices=[('P', 'Portatif'), ('M', 'Moyen'), ('G', 'Grand format')], max_length=50)),
                ('dimension', models.CharField(choices=[('30x30mm', '30x30mm'), ('30x38mm', '30x38mm'), ('38x38mm', '38x38mm'), ('40x40mm', '40x40mm'), ('45x45mm', '45x45mm'), ('50x50mm', '50x50mm')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Carnet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('support_original', models.CharField(choices=[('Aucun', 'Aucun'), ('Blanc 55gr', 'Blanc 55gr'), ('Bleu 53 gr', 'Bleu 53 gr'), ('Rose 53 gr', 'Rose 53 gr'), ('Blanc 55gr avec carbone', 'Blanc 55gr avec carbone'), ('Bleu 53 gr avec carbone', 'Bleu 53 gr avec carbone'), ('Rose 53 gr avec carbone', 'Rose 53 gr avec carbone')], max_length=50)),
                ('support_copie', models.CharField(choices=[('Aucun', 'Aucun'), ('Blanc 55gr', 'Blanc 55gr'), ('Bleu 53 gr', 'Bleu 53 gr'), ('Rose 53 gr', 'Rose 53 gr'), ('Blanc 55gr avec carbone', 'Blanc 55gr avec carbone'), ('Bleu 53 gr avec carbone', 'Bleu 53 gr avec carbone'), ('Rose 53 gr avec carbone', 'Rose 53 gr avec carbone')], max_length=50)),
                ('support_souche', models.CharField(choices=[('Aucun', 'Aucun'), ('Blanc 55gr', 'Blanc 55gr'), ('Bleu 53 gr', 'Bleu 53 gr'), ('Rose 53 gr', 'Rose 53 gr'), ('Blanc 55gr avec carbone', 'Blanc 55gr avec carbone'), ('Bleu 53 gr avec carbone', 'Bleu 53 gr avec carbone'), ('Rose 53 gr avec carbone', 'Rose 53 gr avec carbone')], max_length=50)),
                ('format_papier', models.CharField(choices=[('A2', 'A2'), ('A3', 'A3'), ('A4', 'A4'), ('A5', 'A5'), ('1/3 A4', '1/3 A4')], max_length=50)),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarteService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('face_impression', models.CharField(choices=[('Recto', 'Recto'), ('Recto/verso', 'Recto/verso')], max_length=50)),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarteVisite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_papier', models.CharField(choices=[('Simple cartonné', 'Simple cartonné'), ('Papier doré', 'Papier doré'), ('Papier couché 135gr', 'Papier couché 135gr'), ('Papier couché blanc 350 gr', 'Papier couché blanc 350 gr')], max_length=50)),
                ('face_impression', models.CharField(choices=[('Recto', 'Recto'), ('Recto/verso', 'Recto/verso')], max_length=50)),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CasquetteBlanche',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChargeurBatterie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_chargeur', models.CharField(choices=[('Einhell', 'Einhell'), ('Emergy', 'Emergy'), ('Dewalt', 'Dewalt'), ('Imo Italia', 'Imo Italia'), ('Makita', 'Makita'), ('Stihl', 'Stihl')], max_length=20)),
                ('capacite_chargeur', models.CharField(choices=[('20 à 120 Ah', '20 à 120 Ah'), ('20 à 400 Ah', '20 à 400 Ah'), ('250 Ah', '250 Ah')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClefMolette',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('dimension_clef_molette', models.CharField(choices=[('10"', '10"'), ('12"', '12"'), ('14"', '14"'), ('36"', '36"')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CoffretElectrique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('Suprema', 'Suprema'), ('TELEMECA', 'TELEMECA')], max_length=20)),
                ('nombre_module', models.CharField(choices=[('4', '4'), ('6', '6'), ('8', '8'), ('12', '12'), ('16', '16'), ('18', '18'), ('24', '24')], max_length=20)),
                ('encastre_sailli', models.CharField(choices=[('Encastré', 'Encastré'), ('SAILLI', 'SAILLI')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Compresseur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_marchine', models.CharField(choices=[('Einhell', 'Einhell'), ('Emergy', 'Emergy'), ('Dewalt', 'Dewalt'), ('Imo Italia', 'Imo Italia'), ('Makita', 'Makita'), ('Stihl', 'Stihl')], max_length=20)),
                ('capacite_compresseur', models.CharField(choices=[('6 litres', '6 litres'), ('24 litres', '24 litres'), ('50 litres', '50 litres'), ('100 litres', '100 litres'), ('200 litres', '200 litres'), ('300 litres', '300 litres')], max_length=20)),
                ('puissance_compresseur', models.CharField(choices=[('1100W', '1100W'), ('1125W', '1125W'), ('1500W', '1500W'), ('1875W', '1875W'), ('3000W', '3000W')], max_length=20)),
                ('pression', models.CharField(choices=[('7 bars', '7 bars'), ('8 bars', '8 bars'), ('10 bars', '10 bars'), ('100 bars', '100 bars'), ('120 bars', '120 bars'), ('150 bars', '150 bars')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Conseil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_intervention', models.CharField(choices=[('C', 'Continue'), ('P', 'Ponctuelle')], max_length=50)),
                ('nombre_employes', models.CharField(choices=[('1', '0-6'), ('2', '6-10'), ('3', '10 et plus')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contacteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('Suprema', 'Suprema'), ('TELEMECA', 'TELEMECA')], max_length=20)),
                ('puissance', models.CharField(choices=[('4KW', '4KW'), ('5.5KW', '5.5KW'), ('7.5KW', '7.5KW'), ('11KW', '11KW'), ('55KW', '55KW'), ('90KW', '90KW'), ('110KW', '110KW')], max_length=20)),
                ('tension', models.CharField(choices=[('3.6V', '3.6V'), ('10.8V', '10.8V'), ('12V', '12V'), ('24V', '24V'), ('14.4V', '14.4V'), ('18V', '18V'), ('24V', '24V'), ('24VCC', '24VCC'), ('48V', '48V'), ('110V', '110V'), ('220V', '220V'), ('230V', '230V'), ('240V', '240V'), ('250V', '250V'), ('380V', '380V'), ('400V', '400V'), ('500V', '500V'), ('1000V', '1000V')], max_length=20)),
                ('intensite', models.CharField(choices=[('1A', '1A'), ('2A', '2A'), ('6A', '6A'), ('9A', '9A'), ('10A', '10A'), ('12A', '12A'), ('16A', '16A'), ('18A', '18A'), ('20A', '20A'), ('25A', '25A'), ('32A', '32A'), ('40A', '40A'), ('50A', '50A'), ('63A', '63A'), ('65A', '65A'), ('80A', '80A'), ('100A', '100A'), ('115A', '115A'), ('125A', '125A'), ('150A', '150A'), ('160A', '160A'), ('185A', '185A'), ('200A', '200A'), ('225A', '225'), ('250A', '250A'), ('400A', '400A'), ('1000A', '1000A')], max_length=20)),
                ('nombre_pole', models.CharField(choices=[('2P', '2P'), ('3P', '3P'), ('4P', '4P')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ControleAccesEtPointage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_equipement', models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('Suprema', 'Suprema'), ('TELEMECA', 'TELEMECA')], max_length=50)),
                ('mode_fonctionnement', models.CharField(choices=[('Code', 'Code'), ('Badge', 'Badge'), ('Badge + empreinte digitale', 'Badge + empreinte digitale'), ('Empreinte digitale', 'Empreinte digitale')], max_length=50)),
                ('pointage_presence', models.CharField(choices=[('Oui', 'Oui'), ('Non', 'Non')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Convertisseur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_convertisseur', models.CharField(choices=[('Victron', 'Victron'), ('Westech', 'Westech')], max_length=20)),
                ('puissance_convertisseur', models.CharField(choices=[('300W', '300W'), ('600W', '600W'), ('800W', '800W'), ('1000W', '1000W'), ('2000W', '2000W'), ('3000W', '3000W'), ('4000W', '4000W'), ('5000W', '5000W')], max_length=20)),
                ('tension_convertisseur', models.CharField(choices=[('12V', '12V'), ('12/24V', '12/24V'), ('24V', '24V'), ('48V', '48V')], max_length=20)),
                ('Chargeur_convertisseur', models.CharField(choices=[('Oui', 'Oui'), ('Non', 'Non')], max_length=20)),
                ('sinus_pur', models.CharField(choices=[('Oui', 'Oui'), ('Non', 'Non')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CoursAnglais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('niveau_cours', models.CharField(choices=[('A', 'Avancé'), ('I', 'Intermédiaire'), ('D', 'Débutant')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cylindre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_cylindre', models.CharField(choices=[('DGC', 'DGC'), ('Italy', 'Italy'), ('Renz', 'Renz'), ('Sislye', 'Sislye'), ('Vachette', 'Vachette')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Depliant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_papier', models.CharField(choices=[('Simple cartonné', 'Simple cartonné'), ('Papier doré', 'Papier doré'), ('Papier couché 135gr', 'Papier couché 135gr'), ('Papier couché blanc 350 gr', 'Papier couché blanc 350 gr')], max_length=50)),
                ('face_impression', models.CharField(choices=[('Recto', 'Recto'), ('Recto/verso', 'Recto/verso')], max_length=50)),
                ('format_papier', models.CharField(choices=[('A2', 'A2'), ('A3', 'A3'), ('A4', 'A4'), ('A5', 'A5'), ('1/3 A4', '1/3 A4')], max_length=50)),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Desktop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('CANON', 'CANON')], max_length=50)),
                ('type_processeur', models.CharField(choices=[('icore3', 'icore3'), ('icore5', 'icore5'), ('icore7', 'icore7'), ('celeron', 'celeron')], max_length=50)),
                ('capacite_disque_dur', models.CharField(choices=[('01', 'Freshman'), ('02', 'Sophomore'), ('03', 'Junior'), ('04', 'Senior')], max_length=50)),
                ('capacite_ram', models.CharField(choices=[('2GB', '2GB'), ('4GB', '4GB'), ('6GB', '6GB'), ('8GB', '8GB')], max_length=50)),
                ('systeme_exploitation', models.CharField(choices=[('WIN7', 'WIN7'), ('WIN8', 'WIN8'), ('WIN10', 'WIN10'), ('ANDROID', 'ANDROID')], max_length=50)),
                ('taille_ecran', models.CharField(choices=[('11', '11'), ('13', '13'), ('15', '15'), ('17', '17')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DetecteurIntrusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('mode_detection', models.CharField(choices=[('Choc', 'Choc'), ('Mouvement', 'Mouvement')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Disjoncteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('Suprema', 'Suprema'), ('TELEMECA', 'TELEMECA')], max_length=50)),
                ('intensite', models.CharField(choices=[('1A', '1A'), ('2A', '2A'), ('6A', '6A'), ('9A', '9A'), ('10A', '10A'), ('12A', '12A'), ('16A', '16A'), ('18A', '18A'), ('20A', '20A'), ('25A', '25A'), ('32A', '32A'), ('40A', '40A'), ('50A', '50A'), ('63A', '63A'), ('65A', '65A'), ('80A', '80A'), ('100A', '100A'), ('115A', '115A'), ('125A', '125A'), ('150A', '150A'), ('160A', '160A'), ('185A', '185A'), ('200A', '200A'), ('225A', '225'), ('250A', '250A'), ('400A', '400A'), ('1000A', '1000A')], max_length=50)),
                ('nombre_phase', models.CharField(choices=[('G1', 'G1'), ('G2', 'G2'), ('G3', 'G3'), ('G4', 'G4')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DisjoncteurMoteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('Suprema', 'Suprema'), ('TELEMECA', 'TELEMECA')], max_length=50)),
                ('intensite', models.CharField(choices=[('6-10A', '6-10A'), ('13-17A', '13-17A'), ('17-23A', '17-23A')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnregistreurCameraSurveillance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('nombre_canaux', models.CharField(choices=[('16', '16')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnseigneLumineuse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('format_enseigne', models.CharField(choices=[('Grand format', 'Grand format'), ('Petit format', 'Petit format')], max_length=20)),
                ('longueur', models.CharField(choices=[('2m', '2m'), ('3m', '3m'), ('5m', '5m'), ('10m', '10m'), ('1,20m', '1,20m'), ('15m', '15m'), ('20m', '20m'), ('25m', '25m'), ('50m', '50m'), ('100m', '100m')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Equerre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('dimension', models.CharField(choices=[('300x400mm', '300x400mm'), ('400x600mm', '400x600mm'), ('600x800mm', '600x800mm'), ('800x100mm', '800x100mm'), ('1000x1000mm', '1000x1000mm')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Farde',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_papier', models.CharField(choices=[('Simple cartonné', 'Simple cartonné'), ('Papier doré', 'Papier doré'), ('Papier couché 135gr', 'Papier couché 135gr'), ('Papier couché blanc 350 gr', 'Papier couché blanc 350 gr')], max_length=50)),
                ('face_impression', models.CharField(choices=[('Recto', 'Recto'), ('Recto/verso', 'Recto/verso')], max_length=50)),
                ('format_papier', models.CharField(choices=[('A2', 'A2'), ('A3', 'A3'), ('A4', 'A4'), ('A5', 'A5'), ('1/3 A4', '1/3 A4')], max_length=50)),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Flexible',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('utilisation', models.CharField(choices=[('Chauffe eau', 'Chauffe eau'), ('Hydrophore', 'Hydrophore'), ('Lavabo', 'Lavabo')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Flyer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_papier', models.CharField(choices=[('Simple cartonné', 'Simple cartonné'), ('Papier doré', 'Papier doré'), ('Papier couché 135gr', 'Papier couché 135gr'), ('Papier couché blanc 350 gr', 'Papier couché blanc 350 gr')], max_length=50)),
                ('face_impression', models.CharField(choices=[('Recto', 'Recto'), ('Recto/verso', 'Recto/verso')], max_length=50)),
                ('format_papier', models.CharField(choices=[('A2', 'A2'), ('A3', 'A3'), ('A4', 'A4'), ('A5', 'A5'), ('1/3 A4', '1/3 A4')], max_length=50)),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fusible',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('Suprema', 'Suprema'), ('TELEMECA', 'TELEMECA')], max_length=50)),
                ('intensite', models.CharField(choices=[('1A', '1A'), ('2A', '2A'), ('6A', '6A'), ('9A', '9A'), ('10A', '10A'), ('12A', '12A'), ('16A', '16A'), ('18A', '18A'), ('20A', '20A'), ('25A', '25A'), ('32A', '32A'), ('40A', '40A'), ('50A', '50A'), ('63A', '63A'), ('65A', '65A'), ('80A', '80A'), ('100A', '100A'), ('115A', '115A'), ('125A', '125A'), ('150A', '150A'), ('160A', '160A'), ('185A', '185A'), ('200A', '200A'), ('225A', '225'), ('250A', '250A'), ('400A', '400A'), ('1000A', '1000A')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_gant', models.CharField(choices=[('Anti chaleur', 'Anti chaleur'), ('Chantier', 'Chantier'), ('Coton', 'Coton'), ('Cuire', 'Cuire'), ('Plastique', 'Plastique')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gravure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('support_gravure', models.CharField(choices=[('M', 'Métallique'), ('P', 'Plastique')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupeElectrogene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_marchine', models.CharField(choices=[('Einhell', 'Einhell'), ('Emergy', 'Emergy'), ('Dewalt', 'Dewalt'), ('Imo Italia', 'Imo Italia'), ('Makita', 'Makita'), ('Stihl', 'Stihl')], max_length=20)),
                ('moteur', models.CharField(choices=[('Diesel', 'Diesel'), ('Essence', 'Essence')], max_length=20)),
                ('silencieux', models.CharField(choices=[('Oui', 'Oui'), ('Non', 'Non')], max_length=20)),
                ('puissance_groupe', models.CharField(choices=[('720W', '720W'), ('3100W', '3100W'), ('3500W', '3500W'), ('4875W', '4875W'), ('5000W', '5000W'), ('5500W', '5500W'), ('7500W', '7500W'), ('10000W', '10000W')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Imprimante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('CANON', 'CANON')], max_length=50)),
                ('technologie', models.CharField(choices=[('LASER', 'LASER'), ('JET', 'JET D ENCRE')], max_length=50)),
                ('couleur', models.CharField(choices=[('COULEUR', 'COULEUR'), ('NB', 'NB')], max_length=50)),
                ('multifonction', models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=50)),
                ('rectoverso', models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=50)),
                ('format_papier', models.CharField(choices=[('A5', 'A5'), ('A4', 'A4'), ('A3', 'A3'), ('A2', 'A2')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Interpretariat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('langue_interpretariat', models.CharField(choices=[('1', 'Français-Anglais'), ('2', 'Francais-Lingala'), ('3', 'Anglais-Lingala')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InterrupteurDifferentiel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('ABB', 'ABB'), ('GENERAL ELECTRIC', 'GENERAL ELECTRIC'), ('SCHNEIDER', 'SCHNEIDER'), ('Suprema', 'Suprema'), ('TELEMECA', 'TELEMECA')], max_length=50)),
                ('intensite', models.CharField(choices=[('1A', '1A'), ('2A', '2A'), ('6A', '6A'), ('9A', '9A'), ('10A', '10A'), ('12A', '12A'), ('16A', '16A'), ('18A', '18A'), ('20A', '20A'), ('25A', '25A'), ('32A', '32A'), ('40A', '40A'), ('50A', '50A'), ('63A', '63A'), ('65A', '65A'), ('80A', '80A'), ('100A', '100A'), ('115A', '115A'), ('125A', '125A'), ('150A', '150A'), ('160A', '160A'), ('185A', '185A'), ('200A', '200A'), ('225A', '225'), ('250A', '250A'), ('400A', '400A'), ('1000A', '1000A')], max_length=50)),
                ('nombre_phase', models.CharField(choices=[('2P', '2P'), ('3P', '3P'), ('4P', '4P')], max_length=50)),
                ('sensibilite', models.CharField(choices=[('30MA', '30MA'), ('300MA', '300MA')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InterrupteurElectrique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('Ingelec', 'Ingelec'), ('Le grand', 'Le grand'), ('Niko', 'Niko'), ('Schneider', 'Schneider'), ('Vicko', 'Vicko')], max_length=50)),
                ('schema', models.CharField(choices=[('Schéma 1', 'Schéma 1'), ('Schéma 2', 'Schéma 2'), ('Schéma 3', 'Schéma 3'), ('Schéma 4', 'Schéma 4'), ('Schéma 5', 'Schéma 5'), ('Schéma 6', 'Schéma 6'), ('Schéma 7', 'Schéma 7')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Inverseur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('intensite', models.CharField(choices=[('63A', '63A'), ('100A', '100A'), ('125A', '125A'), ('160A', '160A'), ('200A', '200A')], max_length=50)),
                ('nombre_prise', models.CharField(choices=[('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('8', '8')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Laniere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Laptop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('CANON', 'CANON')], max_length=50)),
                ('type_processeur', models.CharField(choices=[('icore3', 'icore3'), ('icore5', 'icore5'), ('icore7', 'icore7'), ('celeron', 'celeron')], max_length=50)),
                ('disque_dur', models.CharField(choices=[('01', 'Freshman'), ('02', 'Sophomore'), ('03', 'Junior'), ('04', 'Senior')], max_length=50)),
                ('memoire_ram', models.CharField(choices=[('2GB', '2GB'), ('4GB', '4GB'), ('6GB', '6GB'), ('8GB', '8GB')], max_length=50)),
                ('systeme_exploitation', models.CharField(choices=[('WIN7', 'WIN7'), ('WIN8', 'WIN8'), ('WIN10', 'WIN10'), ('ANDROID', 'ANDROID')], max_length=50)),
                ('taille_ecran', models.CharField(choices=[('11', '11'), ('13', '13'), ('15', '15'), ('17', '17')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='MachineAtelierNonPortatif',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_marchine', models.CharField(choices=[('Einhell', 'Einhell'), ('Emergy', 'Emergy'), ('Dewalt', 'Dewalt'), ('Imo Italia', 'Imo Italia'), ('Makita', 'Makita'), ('Stihl', 'Stihl')], max_length=20)),
                ('type_machine_non_portatif', models.CharField(choices=[('Aspirateur', 'Aspirateur'), ('Boulonneur', 'Boulonneur'), ('Burineur', 'Burineur'), ('Coupe carrelage', 'Coupe carrelage'), ('Coupe haie', 'Coupe haie'), ('Décapeur', 'Décapeur'), ('Défonceuse', 'Défonceuse'), ('Foreuse', 'Foreuse'), ('Fraiseuse', 'Fraiseuse'), ('Marteau perforateur', 'Marteau perforateur'), ('Mélangeur', 'Mélangeur'), ('Meleuse', 'Meleuse'), ('Palan électrique', 'Palan électrique'), ('Perceuse', 'Perceuse'), ('Perforateur', 'Perforateur'), ('Pistolet à souder', 'Pistolet à souder'), ('Pompe', 'Pompe'), ('Ponceuse', 'Ponceuse'), ('Rabot', 'Rabot'), ('Raboteuse', 'Raboteuse'), ('Rainureuse', 'Rainureuse'), ('Scie', 'Scie'), ('Souffleur', 'Souffleur'), ('Tondeuse', 'Tondeuse'), ('Touret', 'Touret'), ('Tronçonneuse', 'Tronçonneuse'), ('Débroussailleuse', 'Débroussailleuse')], max_length=20)),
                ('puissance_machine', models.CharField(choices=[('100W', '100W'), ('120W', '120W'), ('150W', '150W'), ('180W', '180W'), ('200W', '200W'), ('240W', '240W'), ('250W', '250W'), ('300W', '300W'), ('350W', '350W'), ('370W', '370W'), ('400W', '400W'), ('450W', '450W'), ('500W', '500W'), ('550W', '550W'), ('600W', '600W'), ('630W', '630W'), ('650W', '650W'), ('700W', '700W'), ('701W', '701W'), ('710W', '710W'), ('720W', '720W'), ('750W', '750W'), ('770W', '770W'), ('800W', '800W'), ('815W', '815W'), ('840W', '840W'), ('850W', '850W'), ('860W', '860W'), ('900W', '900W'), ('1000W', '1000W'), ('1050W', '1050W'), ('1010W', '1010W'), ('1100W', '1100W'), ('1150W', '1150W'), ('1200W', '1200W'), ('1230W', '1230W'), ('1250W', '1250W'), ('1280W', '1280W'), ('1300W', '1300W'), ('1320W', '1320W'), ('1400W', '1400W'), ('1500W', '1500W'), ('1600W', '1600W'), ('1650W', '1650W'), ('1700W', '1700W'), ('1750W', '1750W'), ('1800W', '1800W'), ('1900W', '1900W'), ('2000W', '2000W'), ('2100W', '2100W'), ('2200W', '2200W'), ('2250W', '2250W'), ('2300W', '2300W'), ('2350W', '2350W'), ('2400W', '2400W'), ('2600W', '2600W'), ('2800W', '2800W'), ('3000W', '3000W'), ('12800W', '12800W')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MachineAtelierPortatif',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_marchine', models.CharField(choices=[('Einhell', 'Einhell'), ('Emergy', 'Emergy'), ('Dewalt', 'Dewalt'), ('Imo Italia', 'Imo Italia'), ('Makita', 'Makita'), ('Stihl', 'Stihl')], max_length=20)),
                ('type_machine_portatif', models.CharField(choices=[('Visseuse', 'Visseuse')], max_length=20)),
                ('tension', models.CharField(choices=[('3.6V', '3.6V'), ('10.8V', '10.8V'), ('12V', '12V'), ('24V', '24V'), ('14.4V', '14.4V'), ('18V', '18V'), ('24V', '24V'), ('24VCC', '24VCC'), ('48V', '48V'), ('110V', '110V'), ('220V', '220V'), ('230V', '230V'), ('240V', '240V'), ('250V', '250V'), ('380V', '380V'), ('400V', '400V'), ('500V', '500V'), ('1000V', '1000V')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MecheBeton',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('diametre', models.CharField(choices=[('5mm', '5mm'), ('6mm', '6mm'), ('8mm', '8mm'), ('10mm', '10mm'), ('12mm', '12mm'), ('14mm', '14mm'), ('16mm', '16mm'), ('20mm', '20mm'), ('25mm', '25mm'), ('32mm', '32mm'), ('50mm', '50mm'), ('63mm', '63mm'), ('90mm', '90mm'), ('110mm', '110mm')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonteCharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('poids', models.CharField(choices=[('1 tonne', '1 tonne'), ('2 tonnes', '2 tonnes'), ('3 tonnes', '3 tonnes'), ('4 tonnes', '4 tonnes'), ('5 tonnes', '5 tonnes')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MoteurElectrique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_moteur', models.CharField(choices=[('Speroni', 'Speroni')], max_length=20)),
                ('tension_moteur', models.CharField(choices=[('230V', '230V'), ('400V', '400V')], max_length=20)),
                ('puissance_moteur', models.CharField(choices=[('180W', '180W'), ('250W', '250W'), ('370W', '370W'), ('550W', '550W'), ('750W', '750W'), ('1.1KW', '1.1KW'), ('1.5KW', '1.5KW'), ('2.2KW', '2.2KW'), ('3KW', '3KW'), ('4KW', '4KW'), ('7.5KW', '7.5KW'), ('11KW', '11KW'), ('15KW', '15KW'), ('18.5KW', '18.5KW')], max_length=20)),
                ('nombre_pole', models.CharField(choices=[('2P', '2P'), ('3P', '3P'), ('4P', '4P')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotoPompe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('moteur', models.CharField(choices=[('Diesel', 'Diesel'), ('Essence', 'Essence')], max_length=20)),
                ('section_moto_pompe', models.CharField(choices=[('2"', '2"'), ('3"', '3"'), ('4"', '4"')], max_length=20)),
                ('puissance_moto_pompe', models.CharField(choices=[('10hp', '10hp'), ('13hp', '13hp'), ('15hp', '15hp')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OutilsJardinage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_outils', models.CharField(choices=[('Plantoir', 'Plantoir'), ('Pinceau', 'Pinceau')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PalanMecanique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('poids', models.CharField(choices=[('1 tonne', '1 tonne'), ('2 tonnes', '2 tonnes'), ('3 tonnes', '3 tonnes'), ('4 tonnes', '4 tonnes'), ('5 tonnes', '5 tonnes')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Paumelle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('dimension', models.CharField(choices=[('85mm', '85mm'), ('90mm', '90mm'), ('95mm', '95mm'), ('120mm', '120mm'), ('140mm', '140mm'), ('160mm', '160mm')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PieceDeRechangeCarrosserie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('pieces_rechange_carrosserie', models.CharField(choices=[('01', 'Balais essuie glace avant'), ('02', 'Feu arrière gauche'), ('03', 'Feu arrière droite'), ('04', 'Phare avant gauche'), ('05', 'Phare avant droite'), ('06', 'Retroviseur gauche'), ('07', 'Retroviseur droite')], max_length=50)),
                ('annee_debut_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('annee_fin_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PieceDeRechangeDirectionSuspension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('pieces_rechange_direction_suspension', models.CharField(choices=[('01', 'Amortisseur arrière'), ('02', 'Ammortisseur avant'), ('03', 'Biellette stabilisatrice arrière'), ('04', 'Biellette stabilisatrice avant'), ('05', 'Bras de suspension inférieur'), ('06', 'Bras de suspension supérieur'), ('07', 'Crémaillère de direction'), ('08', 'Lame maitresse'), ('09', 'Pompe de direction'), ('10', 'Rotule de direction exterieur'), ('11', 'Rotule de direction inférieur'), ('12', 'Rotule de suspension inférieur'), ('13', 'Rotule de suspension supérieur'), ('14', 'Silembloc bras de suspension inférieur'), ('15', 'Silembloc bras de suspension supérieur'), ('16', 'Silembloc stabilisatrice AV'), ('17', 'Silembloc lame inférieur'), ('18', 'Silembloc lame supérieur'), ('19', 'Soufflet de direction')], max_length=50)),
                ('annee_debut_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('annee_fin_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PieceDeRechangeElectrique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('pieces_rechange_electrique', models.CharField(choices=[('01', 'Alternateur'), ('02', "Contacteur de pression d'huile"), ('03', 'Demarreur'), ('04', 'Intercepteur de température'), ('05', 'Pompe à vide alternateur'), ('06', 'Relais de démarrage')], max_length=50)),
                ('annee_debut_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('annee_fin_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PieceDeRechangeEmbrayage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('pieces_rechange_embrayage', models.CharField(choices=[('01', 'Butée embrayage'), ('02', 'Cylindre émetteur'), ('03', 'Cylindre récepteur'), ('04', 'Disque embrayage'), ('05', 'Kit de réparation cylindre récepteur'), ('06', 'Kit de réparation cylindre emetteur'), ('07', 'Plateau embrayage')], max_length=50)),
                ('annee_debut_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('annee_fin_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PieceDeRechangeFreinage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('pieces_rechange_freinage', models.CharField(choices=[('01', 'Cylindre de roue arrière gauche'), ('02', 'Cylindre de roue arrière droite'), ('03', 'Disque de frein avant'), ('04', 'Disque/tambour de frein arrière'), ('05', 'Maitre cylindre'), ('06', 'Plaquette de frein avant'), ('07', 'Plaquette / machoir de frein arrière')], max_length=50)),
                ('annee_debut_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('annee_fin_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PieceDeRechangeRefroidissement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('pieces_rechange_refroidissement', models.CharField(choices=[('1', 'Accouplement hydraulique'), ('2', 'Bouchon radiateur'), ('3', 'Courroie alternateur'), ('4', 'Pompe à eau'), ('5', 'Radiateur'), ('6', 'Thermostat'), ('7', 'Ventilateur')], max_length=50)),
                ('annee_debut_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('annee_fin_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PieceDeRechangeTransmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('pieces_rechange_transmission', models.CharField(choices=[('01', 'Ecrou de roue arrière'), ('02', 'Ecrou de roue avant'), ('03', 'Goujon de roue arrière'), ('04', 'Goujon de roue avant'), ('05', 'Croisillon 1'), ('06', 'Croisillon 2'), ('07', 'Kit de roulement de roue arrière'), ('08', 'Kit de roulement de roue avant'), ('09', 'Kit roulement de roue avant droite'), ('10', 'Moyeu avant gauche'), ('11', 'Palier de transmission'), ('12', 'Roulement Moyeu arrière'), ('13', 'Soufflet de transmission')], max_length=50)),
                ('annee_debut_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('annee_fin_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PieceRechangeMoteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('pieces_rechange_moteur', models.CharField(choices=[('01', 'Bougie'), ('02', 'Courroie alternateur'), ('03', 'Courroie compresseur'), ('04', 'Courroie de distribution'), ('05', 'Courroie de direction'), ('06', 'Courroie pompe allerte'), ('07', 'Filtre à air'), ('08', 'Filtre à carburant'), ('09', 'Filtre à huile'), ('10', 'Filtre habitacle'), ('11', 'Injecteur complet'), ('12', 'Nez injecteur'), ('13', 'Pompe à carburant'), ('14', 'Pompe à huile'), ('15', 'Support moteur'), ('16', 'Tendeur alternateur'), ('17', 'Tendeur de distribution'), ('18', 'Tendeur distributeur'), ('19', 'Turbo compresseur')], max_length=50)),
                ('annee_debut_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('annee_fin_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PieceRevisionMoteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('pieces_revision_moteur', models.CharField(choices=[('01', 'Bielle moteur'), ('02', 'Chemise (jeux de 4 pcs)'), ('03', 'Coussinet bielle'), ('04', 'Coussinet latéral'), ('05', 'Coussinet palier'), ('06', 'Joint de culasse'), ('07', 'Piston (sans segment)'), ('08', 'Pochette de joint'), ('09', 'Retient huile'), ('10', 'Segments')], max_length=50)),
                ('annee_debut_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('annee_fin_fabrication_vehicule', models.CharField(choices=[('01', '2002'), ('02', '2003'), ('03', '2004'), ('04', '2005'), ('05', '2006'), ('06', '2007'), ('07', '2008'), ('08', '2009'), ('09', '2010'), ('10', '2011'), ('11', '2012'), ('12', '2013'), ('13', '2014'), ('14', '2015'), ('15', '2016'), ('16', '2017')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PompeEau',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_pompe', models.CharField(choices=[('Einhell', 'Einhell'), ('Emergy', 'Emergy'), ('Dewalt', 'Dewalt'), ('Imo Italia', 'Imo Italia'), ('Makita', 'Makita'), ('Stihl', 'Stihl')], max_length=20)),
                ('hauteur_pompe', models.CharField(choices=[('5,5m', '5,5m'), ('8m', '8m'), ('9m', '9m'), ('10m', '10m'), ('11m', '11m'), ('26m', '26m'), ('36m', '36m'), ('65m', '65m'), ('90m', '90m'), ('116m', '116m'), ('141m', '141m'), ('202m', '202m'), ('203m', '203m'), ('228m', '228m'), ('195m', '195m'), ('258m', '258m'), ('271m', '271m'), ('352m', '352m'), ('399m', '399m'), ('419m', '419m'), ('420m', '420m'), ('424m', '424m'), ('485m', '485m'), ('505m', '505m')], max_length=20)),
                ('puissance_pompe', models.CharField(choices=[('270W', '270W'), ('300W', '300W'), ('370W', '370W'), ('375W', '375W'), ('550W', '550W'), ('650W', '650W'), ('690W', '690W'), ('750W', '750W'), ('780W', '780W'), ('900W', '900W'), ('1000W', '1000W'), ('1100W', '1100W'), ('1125W', '1125W'), ('1300W', '1300W'), ('1500W', '1500W'), ('2200W', '2200W'), ('3000W', '3000W'), ('3750W', '3750W'), ('4000W', '4000W'), ('4800W', '4800W'), ('5500W', '5500W'), ('7500W', '7500W'), ('11000W', '11000W'), ('15000W', '15000W'), ('18500W', '18500W')], max_length=20)),
                ('debit_pompe', models.CharField(choices=[('300 l/h', '300 l/h'), ('600 l/h', '600 l/h'), ('1200 l/h', '1200 l/h'), ('1500 l/h', '1500 l/h'), ('1800 l/h', '1800 l/h'), ('3000 l/h', '3000 l/h'), ('3800 l/h', '3800 l/h'), ('4020 l/h', '4020 l/h'), ('4600 l/h', '4600 l/h'), ('6800 l/h', '6800 l/h'), ('10020 l/h', '10020 l/h'), ('15000 l/h', '15000 l/h'), ('15700 l/h', '15700 l/h'), ('17500 l/h', '17500 l/h'), ('18000 l/h', '18000 l/h'), ('23000 l/h', '23000 l/h')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PompeForage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_pompe', models.CharField(choices=[('Einhell', 'Einhell'), ('Emergy', 'Emergy'), ('Dewalt', 'Dewalt'), ('Imo Italia', 'Imo Italia'), ('Makita', 'Makita'), ('Stihl', 'Stihl')], max_length=20)),
                ('force_pompe', models.CharField(choices=[('900N', '900N'), ('1300N', '1300N')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PompeHydrophore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_pompe', models.CharField(choices=[('Einhell', 'Einhell'), ('Emergy', 'Emergy'), ('Dewalt', 'Dewalt'), ('Imo Italia', 'Imo Italia'), ('Makita', 'Makita'), ('Stihl', 'Stihl')], max_length=20)),
                ('capacite_pompe', models.CharField(choices=[('3000 litres', '3000 litres'), ('3800 litres', '3800 litres'), ('4100 litres', '4100 litres'), ('5500 litres', '5500 litres'), ('10500 litres', '10500 litres'), ('66000 litres', '66000 litres')], max_length=20)),
                ('puissance_pompe', models.CharField(choices=[('270W', '270W'), ('300W', '300W'), ('370W', '370W'), ('375W', '375W'), ('550W', '550W'), ('650W', '650W'), ('690W', '690W'), ('750W', '750W'), ('780W', '780W'), ('900W', '900W'), ('1000W', '1000W'), ('1100W', '1100W'), ('1125W', '1125W'), ('1300W', '1300W'), ('1500W', '1500W'), ('2200W', '2200W'), ('3000W', '3000W'), ('3750W', '3750W'), ('4000W', '4000W'), ('4800W', '4800W'), ('5500W', '5500W'), ('7500W', '7500W'), ('11000W', '11000W'), ('15000W', '15000W'), ('18500W', '18500W')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PorteClef',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PriseElectrique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('Ingelec', 'Ingelec'), ('Le grand', 'Le grand'), ('Niko', 'Niko'), ('Schneider', 'Schneider'), ('Vicko', 'Vicko')], max_length=20)),
                ('type_prise', models.CharField(choices=[('Antenne', 'Antenne'), ('Avec terre', 'Avec terre'), ('Cuisinière', 'Cuisinière'), ('Hermetique', 'Hermetique'), ('Murale', 'Murale'), ('Simple', 'Simple')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rallonge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('longueur', models.CharField(choices=[('2m', '2m'), ('3m', '3m'), ('5m', '5m'), ('10m', '10m'), ('1,20m', '1,20m'), ('15m', '15m'), ('20m', '20m'), ('25m', '25m'), ('50m', '50m'), ('100m', '100m')], max_length=20)),
                ('nombre_prise', models.CharField(choices=[('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('8', '8')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RedactionDesProcedures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_intervention', models.CharField(choices=[('C', 'Continue'), ('P', 'Ponctuelle')], max_length=50)),
                ('nombre_employes', models.CharField(choices=[('1', '0-6'), ('2', '6-10'), ('3', '10 et plus')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReductionPvc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('reduction', models.CharField(choices=[('63/50', '63/50'), ('90/63', '90/63'), ('110/90', '110/90')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecheMain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('matiere', models.CharField(choices=[('Inox', 'Inox'), ('Plastique', 'Plastique')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceDeTraduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('langue', models.CharField(choices=[('A', 'Anglais'), ('F', 'Français')], max_length=20)),
                ('type_document', models.CharField(choices=[('G', 'Général'), ('T', 'Technique')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceNettoyage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_service_nettoyage', models.CharField(choices=[('01', 'Appartement'), ('02', 'Bureaux'), ('03', 'Bureaux + Sanitaires'), ('04', 'Hôtel'), ('05', 'Nettoyage après chantier'), ('06', 'Sanitaires')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceTraiteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_service_traiteur', models.CharField(choices=[('B', 'Buffet'), ('C', 'Cocktail'), ('C', 'Cuisinière'), ('P', 'Pause café')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShoppingBag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiegeEtFauteuilDeBureau',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_siege', models.CharField(choices=[('Chaise accueil', 'Chaise accueil'), ('Chaise visiteur', 'Chaise visiteur'), ('Fauteuil de Direction', 'Fauteuil de Direction'), ('Siège de réunion', 'Siège de réunion')], max_length=50)),
                ('revetement_siege', models.CharField(choices=[('1', 'Bois'), ('2', 'Cuir'), ('3', 'Métal'), ('4', 'Plastique')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Siphon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('sanitaire', models.CharField(choices=[('Baignoire', 'Baignoire'), ('Evier', 'Evier'), ('Lavabo', 'Lavabo'), ('Sol', 'Sol')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stylo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TShirt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_tshirt', models.CharField(choices=[('P', 'Polo'), ('T', 'T-shirt')], max_length=50)),
                ('taille_tshirt', models.CharField(choices=[('L', 'L'), ('M', 'M'), ('S', 'S'), ('XL', 'XL'), ('XXL', 'XXL')], max_length=50)),
                ('couleur_tshirt', models.CharField(choices=[('BL', 'Blanche'), ('BC', 'Blanc-couleur'), ('CO', 'Couleur')], max_length=50)),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TShirtBlanc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('quantite', models.CharField(choices=[('1', '1'), ('10', '10'), ('20', '20'), ('30', '30'), ('50', '50'), ('100', '100'), ('250', '250'), ('500', '500'), ('1000', '1000'), ('2000', '2000'), ('3000', '3000'), ('4000', '4000'), ('5000', '5000'), ('10000', '10000'), ('50000', '50000'), ('100000', '100000')], max_length=50)),
                ('unite_vente', models.CharField(choices=[('Pi', 'Pièce(s)'), ('Pa', 'Paquet(s)'), ('Bo', 'Boite(s)')], max_length=50)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tuyauterie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('matiere_tuyauterie', models.CharField(choices=[('PPR', 'PPR'), ('PVC', 'PVC')], max_length=20)),
                ('localisation', models.CharField(choices=[('Bouchon', 'Bouchon'), ('Coude', 'Coude'), ('Manchon', 'Manchon'), ('Raccord', 'Raccord'), ('Té', 'Té'), ('Tuyau', 'Tuyau'), ('Vanne', 'Vanne')], max_length=10)),
                ('diametre', models.CharField(choices=[('5mm', '5mm'), ('6mm', '6mm'), ('8mm', '8mm'), ('10mm', '10mm'), ('12mm', '12mm'), ('14mm', '14mm'), ('16mm', '16mm'), ('20mm', '20mm'), ('25mm', '25mm'), ('32mm', '32mm'), ('50mm', '50mm'), ('63mm', '63mm'), ('90mm', '90mm'), ('110mm', '110mm')], max_length=20)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=20)),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
