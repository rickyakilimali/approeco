# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-01-24 13:57
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('category', '0002_auto_20180118_1155'),
        ('product', '0006_auto_20180124_1250'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdresseIpPublique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('nombre_adresse_maximum', models.CharField(choices=[('5', '5')], max_length=20, verbose_name='NOMBRE ADRESSE IP PUBLIQUE MAXIMUM')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='CableInformatique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_cable', models.CharField(choices=[('HDMI', 'HDMI'), ('VGA', 'VGA'), ('FIREWARE', 'FIREWARE'), ('OPTICAL', 'OPTICAL'), ('CAT 6', 'CAT 6'), ('COAXIAL', 'COAXIAL'), ('BAFFLE', 'BAFFLE'), ('SON (1*1)', 'SON (1*1)'), ('MAC THUNDER', 'MAC THUNDER')], max_length=50, verbose_name='TYPE CABLE')),
                ('longueur', models.CharField(choices=[('2m', '2m'), ('5m', '5m'), ('10m', '10m'), ('20m', '20m'), ('100m', '100m'), ('300m', '300m'), ('305m', '305m'), ('30cm', '30cm')], max_length=50, verbose_name='LONGUEUR CABLE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Cartouche',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_cartouche', models.CharField(choices=[('HP', 'HP'), ('CANON', 'CANON'), ('EPSON', 'EPSON'), ('BROTHER', 'BROTHER'), ('KATUN', 'KATUN')], max_length=50, verbose_name='MARQUE DE CARTOUCHE')),
                ('numero_cartouche', models.CharField(choices=[('123A', '123A'), ('63A', '63A'), ('17A', '17A'), ('201A', '201A'), ('401A', '401A'), ('563', '563'), ('57', '57'), ('73', '73'), ('122', '122'), ('121', '121'), ('21', '21'), ('22', '22'), ('29', '29'), ('49', '49'), ('60', '60'), ('63', '63'), ('920', '920'), ('932', '932'), ('933', '933'), ('951', '951'), ('TN 1000', 'TN 1000'), ('TN 2025', 'TN 2025'), ('TN 2060', 'TN 2060'), ('TN 2130', 'TN 2130'), ('TN 2260', 'TN 2260'), ('TN 2280', 'TN 2280'), ('TN 240BK', 'TN 240BK'), ('TN 240C', 'TN 240C'), ('TN 240M', 'TN 240M'), ('TN 240Y', 'TN 240Y'), ('TN 261BK', 'TN 261BK'), ('TN 261C', 'TN 261C'), ('TN 261M', 'TN 261M'), ('TN 261Y', 'TN 261Y'), ('TN 3185', 'TN 3185'), ('TN 3250', 'TN 3250'), ('TN 3290', 'TN 3290'), ('TN 3320', 'TN 3320'), ('C-EXV14', 'C-EXV14'), ('C-EXV40', 'C-EXV40'), ('GPR08', 'GPR08'), ('GPR18', 'GPR18'), ('GPR22', 'GPR22'), ('IR 2202-CEXV 42', 'IR 2202-CEXV 42'), ('NPG 32', 'NPG 32'), ('CEXV 33', 'CEXV 33'), ('CF 350', 'CF 350'), ('CF 351', 'CF 351')], max_length=50, verbose_name='NUMERO DE CARTOUCHE')),
                ('couleur_cartouche', models.CharField(choices=[('COULEUR', 'COULEUR'), ('NOIR', 'NOIR'), ('CYAN', 'CYAN'), ('MANGETA ', 'MANGETA '), ('JAUNE', 'JAUNE')], max_length=50, verbose_name='COULEUR DE CARTOUCHE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Clavier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_clavier', models.CharField(choices=[('QWERTY', 'QWERTY'), ('AZERTY', 'AZERTY')], max_length=50, verbose_name='TYPE CLAVIER')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='CreationSiteWeb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_site_web', models.CharField(choices=[('SITE VITRINE', 'SITE VITRINE'), ('E-COMMERCE', 'E-COMMERCE'), ('SITE AVEC APPLICATION', 'SITE AVEC APPLICATION')], max_length=20, verbose_name='TYPE SITE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Graveur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_graveur', models.CharField(choices=[('EXTERNE', 'EXTERNE'), ('INTERNE', 'INTERNE')], max_length=50, verbose_name='POID')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='HebergementSiteWeb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_hebergement', models.CharField(choices=[('SITE VITRINE', 'SITE VITRINE')], max_length=20, verbose_name='TYPE HEBERGEMENT')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Logiciel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type', models.CharField(choices=[('ANTIVIRUS', 'ANTIVIRUS'), ('INTERNET SECURITY', 'INTERNET SECURITY')], max_length=50, verbose_name='TYPE DE LOGICIEL')),
                ('marque', models.CharField(choices=[('KASPERSKY', 'KASPERSKY'), ('NORTON', 'NORTON')], max_length=50, verbose_name='MARQUE')),
                ('licence', models.CharField(choices=[('1 USER', '1 USER'), ('10 USER', '10 USER')], max_length=50, verbose_name='LICENCE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='ModemWifi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('CANON', 'CANON'), ('LENOVO', 'LENOVO'), ('SONY', 'SONY'), ('ASUS', 'ASUS'), ('APPLE', 'APPLE'), ('SANDISK', 'SANDISK'), ('TOSHIBA', 'TOSHIBA'), ('SEAGATE', 'SEAGATE'), ('PREMAX', 'PREMAX'), ('LENOVO', 'LENOVO'), ('SAMSUNG', 'SAMSUNG'), ('APC', 'APC'), ('IMOTION', 'IMOTION'), ('SEAGATE', 'SEAGATE'), ('D LINK', 'D LINK'), ('CISCO', 'CISCO'), ('EPSON', 'EPSON'), ('LINKSYS', 'LINKSYS'), ('TP-LINK', 'TP-LINK'), ('BROTHER', 'BROTHER'), ('KATUN', 'KATUN'), ('ITC', 'ITC'), ('MERCURY', 'MERCURY'), ('IPAD', 'IPAD'), ('HUAWEI', 'HUAWEI')], max_length=50, verbose_name='MARQUE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Moniteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('CANON', 'CANON'), ('LENOVO', 'LENOVO'), ('SONY', 'SONY'), ('ASUS', 'ASUS'), ('APPLE', 'APPLE'), ('SANDISK', 'SANDISK'), ('TOSHIBA', 'TOSHIBA'), ('SEAGATE', 'SEAGATE'), ('PREMAX', 'PREMAX'), ('LENOVO', 'LENOVO'), ('SAMSUNG', 'SAMSUNG'), ('APC', 'APC'), ('IMOTION', 'IMOTION'), ('SEAGATE', 'SEAGATE'), ('D LINK', 'D LINK'), ('CISCO', 'CISCO'), ('EPSON', 'EPSON'), ('LINKSYS', 'LINKSYS'), ('TP-LINK', 'TP-LINK'), ('BROTHER', 'BROTHER'), ('KATUN', 'KATUN'), ('ITC', 'ITC'), ('MERCURY', 'MERCURY'), ('IPAD', 'IPAD'), ('HUAWEI', 'HUAWEI')], max_length=50, verbose_name='MARQUE')),
                ('taille_ecran', models.CharField(choices=[('11', '11'), ('13', '13'), ('15', '15'), ('17', '17'), ('23', '23'), ('18.5', '18.5'), ('19.5', '19.5'), ('22', '22'), ('20', '20')], max_length=50, verbose_name='TAILLE ECRAN')),
                ('type', models.CharField(choices=[('LED', 'LED')], max_length=50, verbose_name='TYPE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='PatchPanel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('nombre_port', models.CharField(choices=[('5 PORTS', '5 PORTS'), ('8 PORTS', '8 PORTS'), ('16 PORTS', '16 PORTS'), ('24 PORTS', '24 PORTS'), ('48 PORTS', '48 PORTS')], max_length=50, verbose_name='NOMBRE PORTS')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Photocopieuse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque_photocopieuse', models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('CANON', 'CANON'), ('LENOVO', 'LENOVO'), ('SONY', 'SONY'), ('ASUS', 'ASUS'), ('APPLE', 'APPLE'), ('SANDISK', 'SANDISK'), ('TOSHIBA', 'TOSHIBA'), ('SEAGATE', 'SEAGATE'), ('PREMAX', 'PREMAX'), ('LENOVO', 'LENOVO'), ('SAMSUNG', 'SAMSUNG'), ('APC', 'APC'), ('IMOTION', 'IMOTION'), ('SEAGATE', 'SEAGATE'), ('D LINK', 'D LINK'), ('CISCO', 'CISCO'), ('EPSON', 'EPSON'), ('LINKSYS', 'LINKSYS'), ('TP-LINK', 'TP-LINK'), ('BROTHER', 'BROTHER'), ('KATUN', 'KATUN'), ('ITC', 'ITC'), ('MERCURY', 'MERCURY'), ('IPAD', 'IPAD'), ('HUAWEI', 'HUAWEI')], max_length=50, verbose_name='MARQUE IMPRIMANTE')),
                ('technologie', models.CharField(choices=[('LASER', 'LASER'), ('JET ENCRE', 'JET ENCRE'), ('DOT MATRIX', 'DOT MATRIX')], max_length=50, verbose_name='TECHNOLOGIE')),
                ('recto_verso', models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=50, verbose_name='RECTO VERSO')),
                ('reseau', models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=50, verbose_name='RESEAU')),
                ('format_max_papier', models.CharField(choices=[('A4', 'A4'), ('A3', 'A3')], max_length=50, verbose_name='FORMAT MAXIMUM PAPIER')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='PointAcces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('CANON', 'CANON'), ('LENOVO', 'LENOVO'), ('SONY', 'SONY'), ('ASUS', 'ASUS'), ('APPLE', 'APPLE'), ('SANDISK', 'SANDISK'), ('TOSHIBA', 'TOSHIBA'), ('SEAGATE', 'SEAGATE'), ('PREMAX', 'PREMAX'), ('LENOVO', 'LENOVO'), ('SAMSUNG', 'SAMSUNG'), ('APC', 'APC'), ('IMOTION', 'IMOTION'), ('SEAGATE', 'SEAGATE'), ('D LINK', 'D LINK'), ('CISCO', 'CISCO'), ('EPSON', 'EPSON'), ('LINKSYS', 'LINKSYS'), ('TP-LINK', 'TP-LINK'), ('BROTHER', 'BROTHER'), ('KATUN', 'KATUN'), ('ITC', 'ITC'), ('MERCURY', 'MERCURY'), ('IPAD', 'IPAD'), ('HUAWEI', 'HUAWEI')], max_length=50, verbose_name='MARQUE')),
                ('fonction_modem', models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=50, verbose_name='FONCTION MODEM')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('montage', models.CharField(choices=[('MUR', 'MUR'), ('SOL', 'SOL')], max_length=50, verbose_name='MONTAGE')),
                ('unites', models.CharField(choices=[('4U', '4U'), ('9U', '9U'), ('12U', '12U'), ('18U', '18U'), ('22U', '22U'), ('27U', '27U'), ('32U', '32U'), ('37U', '37U'), ('42U', '42U')], max_length=50, verbose_name='UNITE')),
                ('dimension', models.CharField(choices=[('600X450', '600X450'), ('600X600', '600X600'), ('600X850', '600X850')], max_length=50, verbose_name='DIMENSION')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Routeur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('CANON', 'CANON'), ('LENOVO', 'LENOVO'), ('SONY', 'SONY'), ('ASUS', 'ASUS'), ('APPLE', 'APPLE'), ('SANDISK', 'SANDISK'), ('TOSHIBA', 'TOSHIBA'), ('SEAGATE', 'SEAGATE'), ('PREMAX', 'PREMAX'), ('LENOVO', 'LENOVO'), ('SAMSUNG', 'SAMSUNG'), ('APC', 'APC'), ('IMOTION', 'IMOTION'), ('SEAGATE', 'SEAGATE'), ('D LINK', 'D LINK'), ('CISCO', 'CISCO'), ('EPSON', 'EPSON'), ('LINKSYS', 'LINKSYS'), ('TP-LINK', 'TP-LINK'), ('BROTHER', 'BROTHER'), ('KATUN', 'KATUN'), ('ITC', 'ITC'), ('MERCURY', 'MERCURY'), ('IPAD', 'IPAD'), ('HUAWEI', 'HUAWEI')], max_length=50, verbose_name='MARQUE')),
                ('wifi', models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=50, verbose_name='WIFI')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Serveur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('SONY', 'SONY'), ('ASUS', 'ASUS'), ('APPLE', 'APPLE'), ('TOSHIBA', 'TOSHIBA')], max_length=50, verbose_name='MARQUE')),
                ('type_processeur', models.CharField(choices=[('CORE I3', 'CORE I3'), ('CORE I5', 'CORE I5'), ('CORE I7', 'CORE I7'), ('CELERON', 'CELERON'), ('CORE DUO', 'CORE DUO'), ('PENTIUM', 'PENTIUM'), ('INTEL XEON', 'INTEL XEON')], max_length=50, verbose_name='TYPE DE PROCESSEUR')),
                ('capacite_ram', models.CharField(choices=[('1GB', '1GB'), ('2GB', '2GB'), ('4GB', '4GB'), ('8GB', '8GB'), ('16GB', '16GB'), ('32GB', '32GB'), ('64GB', '64GB'), ('120GB', '120GB'), ('320GB', '320GB'), ('500GB', '500GB'), ('1TB', '1TB'), ('2TB', '2TB'), ('3TB', '3TB'), ('4TB', '4TB')], max_length=50, verbose_name='MEMOIRE RAM')),
                ('capacite_disque_dur', models.CharField(choices=[('1GB', '1GB'), ('2GB', '2GB'), ('4GB', '4GB'), ('8GB', '8GB'), ('16GB', '16GB'), ('32GB', '32GB'), ('64GB', '64GB'), ('120GB', '120GB'), ('320GB', '320GB'), ('500GB', '500GB'), ('1TB', '1TB'), ('2TB', '2TB'), ('3TB', '3TB'), ('4TB', '4TB')], max_length=50, verbose_name='CAPACITE DU DISQUE DUR')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Souris',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('avec_fil', models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=50, verbose_name='AVEC FIL')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('type_equipement', models.CharField(choices=[('SWITCH', 'SWITCH')], max_length=50, verbose_name='TYPE_EQUIPEMENT')),
                ('marque', models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('CANON', 'CANON'), ('LENOVO', 'LENOVO'), ('SONY', 'SONY'), ('ASUS', 'ASUS'), ('APPLE', 'APPLE'), ('SANDISK', 'SANDISK'), ('TOSHIBA', 'TOSHIBA'), ('SEAGATE', 'SEAGATE'), ('PREMAX', 'PREMAX'), ('LENOVO', 'LENOVO'), ('SAMSUNG', 'SAMSUNG'), ('APC', 'APC'), ('IMOTION', 'IMOTION'), ('SEAGATE', 'SEAGATE'), ('D LINK', 'D LINK'), ('CISCO', 'CISCO'), ('EPSON', 'EPSON'), ('LINKSYS', 'LINKSYS'), ('TP-LINK', 'TP-LINK'), ('BROTHER', 'BROTHER'), ('KATUN', 'KATUN'), ('ITC', 'ITC'), ('MERCURY', 'MERCURY'), ('IPAD', 'IPAD'), ('HUAWEI', 'HUAWEI')], max_length=50, verbose_name='MARQUE')),
                ('nombre_port', models.CharField(choices=[('5 PORTS', '5 PORTS'), ('8 PORTS', '8 PORTS'), ('16 PORTS', '16 PORTS'), ('24 PORTS', '24 PORTS'), ('48 PORTS', '48 PORTS')], max_length=50, verbose_name='NOMBRE DES PORTS')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Unite_stockage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('HP', 'HP'), ('SONY', 'SONY'), ('SANDISK', 'SANDISK'), ('TOSHIBA', 'TOSHIBA'), ('SEAGATE', 'SEAGATE'), ('IMOTION', 'IMOTION'), ('SEAGATE', 'SEAGATE')], max_length=50, verbose_name='MARQUE')),
                ('type', models.CharField(choices=[('MEMOIRE SD', 'MEMOIRE SD'), ('FLASHDISK', 'FLASHDISK'), ('DISQUE EXTERNE', 'DISQUE EXTERNE')], max_length=50, verbose_name='TYPE DE STOCKAGE')),
                ('capacite_memoire', models.CharField(choices=[('1GB', '1GB'), ('2GB', '2GB'), ('4GB', '4GB'), ('8GB', '8GB'), ('16GB', '16GB'), ('32GB', '32GB'), ('64GB', '64GB'), ('120GB', '120GB'), ('320GB', '320GB'), ('500GB', '500GB'), ('1TB', '1TB'), ('2TB', '2TB'), ('3TB', '3TB'), ('4TB', '4TB')], max_length=50, verbose_name='CAPAPCITE DE STOCKAGE')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.CreateModel(
            name='Videoprojecteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('is_active', models.BooleanField()),
                ('marque', models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('CANON', 'CANON'), ('LENOVO', 'LENOVO'), ('SONY', 'SONY'), ('ASUS', 'ASUS'), ('APPLE', 'APPLE'), ('SANDISK', 'SANDISK'), ('TOSHIBA', 'TOSHIBA'), ('SEAGATE', 'SEAGATE'), ('PREMAX', 'PREMAX'), ('LENOVO', 'LENOVO'), ('SAMSUNG', 'SAMSUNG'), ('APC', 'APC'), ('IMOTION', 'IMOTION'), ('SEAGATE', 'SEAGATE'), ('D LINK', 'D LINK'), ('CISCO', 'CISCO'), ('EPSON', 'EPSON'), ('LINKSYS', 'LINKSYS'), ('TP-LINK', 'TP-LINK'), ('BROTHER', 'BROTHER'), ('KATUN', 'KATUN'), ('ITC', 'ITC'), ('MERCURY', 'MERCURY'), ('IPAD', 'IPAD'), ('HUAWEI', 'HUAWEI')], max_length=50, verbose_name='MARQUE')),
                ('puissance', models.CharField(choices=[('5 PORTS', '5 PORTS'), ('8 PORTS', '8 PORTS'), ('16 PORTS', '16 PORTS'), ('24 PORTS', '24 PORTS'), ('48 PORTS', '48 PORTS')], max_length=50, verbose_name='PUISSANCE DU RETOPROJECTEUR')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX')),
                ('units', models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prix'],
            },
        ),
        migrations.AlterModelOptions(
            name='desktop',
            options={'ordering': ['prix']},
        ),
        migrations.AlterModelOptions(
            name='imprimante',
            options={'ordering': ['prix']},
        ),
        migrations.RemoveField(
            model_name='desktop',
            name='capacite_ram',
        ),
        migrations.RemoveField(
            model_name='desktop',
            name='marque',
        ),
        migrations.RemoveField(
            model_name='desktop',
            name='systeme_exploitation',
        ),
        migrations.RemoveField(
            model_name='desktop',
            name='taille_ecran',
        ),
        migrations.RemoveField(
            model_name='imprimante',
            name='format_papier',
        ),
        migrations.RemoveField(
            model_name='imprimante',
            name='marque',
        ),
        migrations.RemoveField(
            model_name='imprimante',
            name='rectoverso',
        ),
        migrations.RemoveField(
            model_name='laptop',
            name='disque_dur',
        ),
        migrations.RemoveField(
            model_name='laptop',
            name='marque',
        ),
        migrations.AddField(
            model_name='desktop',
            name='marque_desktop',
            field=models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('SONY', 'SONY'), ('ASUS', 'ASUS'), ('APPLE', 'APPLE'), ('TOSHIBA', 'TOSHIBA')], default=1, max_length=50, verbose_name='MARQUE DESKTOP'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='desktop',
            name='memoire_ram',
            field=models.CharField(choices=[('1GB', '1GB'), ('2GB', '2GB'), ('4GB', '4GB'), ('8GB', '8GB'), ('16GB', '16GB'), ('32GB', '32GB'), ('64GB', '64GB'), ('120GB', '120GB'), ('320GB', '320GB'), ('500GB', '500GB'), ('1TB', '1TB'), ('2TB', '2TB'), ('3TB', '3TB'), ('4TB', '4TB')], default=1, max_length=50, verbose_name='MEMOIRE RAM'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='imprimante',
            name='format_max_papier',
            field=models.CharField(choices=[('A4', 'A4'), ('A3', 'A3')], default=1, max_length=50, verbose_name='FORMAT MAXIMUM PAPIER'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='imprimante',
            name='marque_imprimante',
            field=models.CharField(choices=[('HP', 'HP'), ('CANON', 'CANON'), ('EPSON', 'EPSON'), ('SAMSUNG', 'SAMSUNG'), ('BROTHER', 'BROTHER')], default=1, max_length=50, verbose_name='MARQUE IMPRIMANTE'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='imprimante',
            name='modele',
            field=models.CharField(choices=[('LASERJET PRO N20', 'LASERJET PRO N20'), ('LASERJET PRO 400', 'LASERJET PRO 400'), ('COLOR LASERJET', 'COLOR LASERJET'), ('DESKJET 2130 ', 'DESKJET 2130 '), ('XPRESS M2020', 'XPRESS M2020'), ('OFFICE JET 4610', 'OFFICE JET 4610'), ('XPRESS M 2835', 'XPRESS M 2835'), ('XPRESS M 2835', 'XPRESS M 2835')], default=1, max_length=50, verbose_name='MODELE'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='laptop',
            name='capacite_disque_dur',
            field=models.CharField(choices=[('1GB', '1GB'), ('2GB', '2GB'), ('4GB', '4GB'), ('8GB', '8GB'), ('16GB', '16GB'), ('32GB', '32GB'), ('64GB', '64GB'), ('120GB', '120GB'), ('320GB', '320GB'), ('500GB', '500GB'), ('1TB', '1TB'), ('2TB', '2TB'), ('3TB', '3TB'), ('4TB', '4TB')], default=1, max_length=50, verbose_name='CAPACITE DU DISQUE DUR'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='laptop',
            name='marque_laptop',
            field=models.CharField(choices=[('HP', 'HP'), ('DELL', 'DELL'), ('ACER', 'ACER'), ('FUJITSU', 'FUJITSU'), ('SONY', 'SONY'), ('ASUS', 'ASUS'), ('APPLE', 'APPLE'), ('TOSHIBA', 'TOSHIBA')], default=1, max_length=50, verbose_name='MARQUE LAPTOP'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='bandepassante',
            name='debit_download',
            field=models.CharField(choices=[('512KBPS', '512KBPS'), ('1MB', '1MB'), ('2MB', '2MB'), ('3MB', '3MB'), ('4MB', '4MB'), ('5MB', '5MB')], max_length=20, verbose_name='DEBIT EN DOWNLOAD'),
        ),
        migrations.AlterField(
            model_name='bandepassante',
            name='debit_upload',
            field=models.CharField(choices=[('ILLIMITE', 'ILLIMITE')], max_length=20, verbose_name='DEBIT EN UPLOAD'),
        ),
        migrations.AlterField(
            model_name='bandepassante',
            name='frais_installation',
            field=models.CharField(choices=[('750$', '150$')], max_length=20, verbose_name='FRAIS INSTALLATION'),
        ),
        migrations.AlterField(
            model_name='bandepassante',
            name='prix',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX'),
        ),
        migrations.AlterField(
            model_name='bandepassante',
            name='type_bande_passante',
            field=models.CharField(choices=[('DEDIE', 'DEDIE')], max_length=20, verbose_name='TYPE BANDE PASSANTE'),
        ),
        migrations.AlterField(
            model_name='bandepassante',
            name='units',
            field=models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS'),
        ),
        migrations.AlterField(
            model_name='desktop',
            name='capacite_disque_dur',
            field=models.CharField(choices=[('1GB', '1GB'), ('2GB', '2GB'), ('4GB', '4GB'), ('8GB', '8GB'), ('16GB', '16GB'), ('32GB', '32GB'), ('64GB', '64GB'), ('120GB', '120GB'), ('320GB', '320GB'), ('500GB', '500GB'), ('1TB', '1TB'), ('2TB', '2TB'), ('3TB', '3TB'), ('4TB', '4TB')], max_length=50, verbose_name='CAPACITE DU DISQUE DUR'),
        ),
        migrations.AlterField(
            model_name='desktop',
            name='prix',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX'),
        ),
        migrations.AlterField(
            model_name='desktop',
            name='type_processeur',
            field=models.CharField(choices=[('CORE I3', 'CORE I3'), ('CORE I5', 'CORE I5'), ('CORE I7', 'CORE I7'), ('CELERON', 'CELERON'), ('CORE DUO', 'CORE DUO'), ('PENTIUM', 'PENTIUM'), ('INTEL XEON', 'INTEL XEON')], max_length=50, verbose_name='TYPE DE PROCESSEUR'),
        ),
        migrations.AlterField(
            model_name='desktop',
            name='units',
            field=models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS'),
        ),
        migrations.AlterField(
            model_name='imprimante',
            name='couleur',
            field=models.CharField(choices=[('COULEUR', 'COULEUR'), ('NOIR ET BLANC', 'NOIR ET BLANC')], max_length=50, verbose_name="COULEUR D'IMPRESSION"),
        ),
        migrations.AlterField(
            model_name='imprimante',
            name='multifonction',
            field=models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=50, verbose_name='RECTO VERSO'),
        ),
        migrations.AlterField(
            model_name='imprimante',
            name='prix',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX'),
        ),
        migrations.AlterField(
            model_name='imprimante',
            name='technologie',
            field=models.CharField(choices=[('LASER', 'LASER'), ('JET ENCRE', 'JET ENCRE'), ('DOT MATRIX', 'DOT MATRIX')], max_length=50, verbose_name='TECHNOLOGIE'),
        ),
        migrations.AlterField(
            model_name='imprimante',
            name='units',
            field=models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS'),
        ),
        migrations.AlterField(
            model_name='laptop',
            name='memoire_ram',
            field=models.CharField(choices=[('1GB', '1GB'), ('2GB', '2GB'), ('4GB', '4GB'), ('8GB', '8GB'), ('16GB', '16GB'), ('32GB', '32GB'), ('64GB', '64GB'), ('120GB', '120GB'), ('320GB', '320GB'), ('500GB', '500GB'), ('1TB', '1TB'), ('2TB', '2TB'), ('3TB', '3TB'), ('4TB', '4TB')], max_length=50, verbose_name='MEMOIRE RAM'),
        ),
        migrations.AlterField(
            model_name='laptop',
            name='prix',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PRIX'),
        ),
        migrations.AlterField(
            model_name='laptop',
            name='type_processeur',
            field=models.CharField(choices=[('CORE I3', 'CORE I3'), ('CORE I5', 'CORE I5'), ('CORE I7', 'CORE I7'), ('CELERON', 'CELERON'), ('CORE DUO', 'CORE DUO'), ('PENTIUM', 'PENTIUM'), ('INTEL XEON', 'INTEL XEON')], max_length=50, verbose_name='TYPE DE PROCESSEUR'),
        ),
        migrations.AlterField(
            model_name='laptop',
            name='units',
            field=models.CharField(choices=[('USD', 'US$'), ('EUROS', 'EUROS'), ('US$/JOUR', 'US$/JOUR'), ('US$/PAGE', 'US$/PAGE'), ('US$/M2', 'US$/M2'), ('USD/MOIS', 'USD/MOIS'), ('USD/PIECE', 'USD/PIECE')], max_length=50, verbose_name='UNITÉS'),
        ),
    ]
